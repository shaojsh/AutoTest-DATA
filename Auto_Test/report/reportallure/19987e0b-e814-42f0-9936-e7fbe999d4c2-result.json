{"name": "test_companyRegister", "status": "broken", "statusDetails": {"message": "TypeError: update expected at most 1 argument, got 2", "trace": "@pytest.mark.run(order=1)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 http://10.10.128.152:10053/user/register 中小微企业注册流程\")\n    @allure.testcase(\"http://10.10.128.152:10053/user/register\", \"注册 👇\")\n    def test_companyRegister():\n        def_name = sys._getframe().f_code.co_name\n        test_Assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(\"http://10.10.128.152:10053/user/register\")\n        # db中清除已注册的账户\n        deleteAct()\n        logger.info(\"对已注册的账户进行删除操作\")\n    \n        waitUntilClick(driver, loginOn.btn_agree_css.value)\n        driver.find_element_by_css_selector(loginOn.btn_agree_css.value).click()\n    \n        waitUntilDisplay(driver, loginOn.input_act_css.value)\n        driver.find_element_by_css_selector(loginOn.input_act_css.value).send_keys(act)\n        driver.find_element_by_css_selector(loginOn.input_pwd_css.value).send_keys(pwd)\n        driver.find_element_by_css_selector(loginOn.input_conPwd_css.value).send_keys(pwd)\n        waitUntilClick(driver, loginOn.btn_phoneCode_css.value)\n        driver.find_element_by_css_selector(loginOn.btn_phoneCode_css.value).click()\n    \n        sleep(8)\n>       message = getPhoneMessage().get(\"regMes\")\n\ntest_flow\\test_Authentication\\test_login.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def getPhoneMessage():\n        r = RedisSqldata()\n        keys = r.keys()\n        pipe = r.pipeline()\n        pipe_size = 100000\n        len = 0\n        key_list = []\n        print(r.pipeline())\n    \n        for key in keys:\n            key_list.append(key)\n            pipe.get(key)\n            if len < pipe_size:\n                len += 1\n            else:\n                for (k, v) in zip(key_list, pipe.execute()):\n                    len = 0\n                    key_list = []\n        phoneMessage = {}\n        for (k, v) in zip(key_list, pipe.execute()):\n            k = bytes.decode(k)\n            v = bytes.decode(v)\n    \n            if k == 'code:A0002:17621198933':  # 密码修改\n                phoneMessage.update(\"forgeMes\", v)\n            if k == 'code:A0003:17621198933':  # 注册\n>               phoneMessage.update(\"regMes\", v)\nE               TypeError: update expected at most 1 argument, got 2\n\ncommon\\dbLink.py:113: TypeError"}, "description": "测试 http://10.10.128.152:10053/user/register 中小微企业注册流程", "attachments": [{"name": "log", "source": "f8d314d7-b487-409e-a6d0-699bc2cf5a27-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "9968f5cc-c2f9-464d-9218-4f2aaa253151-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "0eba3d5e-6f39-4c8f-89f7-993081ce2ebe-attachment.txt", "type": "text/plain"}], "start": 1596707053862, "stop": 1596707080063, "uuid": "5fc5a5fb-ab82-410f-b0e2-de020adae5f9", "historyId": "dd0646a5c1a798e47c4f25747509dea9", "testCaseId": "1fe2bac8daa9cfa6b5ae5069ce9a9205", "fullName": "test_flow.test_Authentication.test_login#test_companyRegister", "labels": [{"name": "severity", "value": "blocker"}, {"name": "tag", "value": "run(order=1)"}, {"name": "parentSuite", "value": "test_flow.test_Authentication"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "A02-03-00033"}, {"name": "thread", "value": "4608-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_flow.test_Authentication.test_login"}], "links": [{"type": "test_case", "url": "http://10.10.128.152:10053/user/register", "name": "注册 👇"}]}