{"name": "test_Tripartite_interaction", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "@pytest.mark.run(order=-1)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 http://10.10.128.152:10052/#/account/login 三方（企业，银行，前端）交互\")\n    @allure.testcase(\"http://10.10.128.152:10052/#/account/login\", \"三方（企业，银行，前端）交互 👇\")\n    def test_Tripartite_interaction():\n        def_name = sys._getframe().f_code.co_name\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        # 前端账户授信申请\n        if runMode != 'UI':\n            driver_forward = webdriver.Chrome()\n            driver_forward.maximize_window()\n            driver_forward.get(url_forward)\n            logger.info('前端账户登录授信申请')\n            login(driver_forward)\n>           creditExtension(driver_forward)\n\ntest_flow\\test_Tripartite_interaction\\test_Tripartite_interaction.py:146: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_flow\\test_Tripartite_interaction\\test_Tripartite_interaction.py:200: in creditExtension\n    waitUntilClick_xpath(driver_forward, path)\ncommon\\BaseFunction.py:45: in waitUntilClick_xpath\n    WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, ByXpath)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"fcd4bdb9f0d497fb82bbfbab98d5c86f\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x000002C416CF9668>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "description": "测试 http://10.10.128.152:10052/#/account/login 三方（企业，银行，前端）交互", "attachments": [{"name": "log", "source": "64628f22-fa39-4e42-bc7d-7b4c957f4a7f-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "3346f2db-56d5-402e-b932-11ea8dd7219f-attachment.txt", "type": "text/plain"}], "start": 1602731718878, "stop": 1602731762567, "uuid": "b5fffdd9-eb01-4a8f-8ad3-4f980af3a156", "historyId": "d91e7b4392163e0b46289a9f8b97b16c", "testCaseId": "ff94b3cb02e8ba4f94c9f712dc0dd88c", "fullName": "test_flow.test_Tripartite_interaction.test_Tripartite_interaction#test_Tripartite_interaction", "labels": [{"name": "severity", "value": "blocker"}, {"name": "tag", "value": "run(order=-1)"}, {"name": "parentSuite", "value": "test_flow.test_Tripartite_interaction"}, {"name": "suite", "value": "test_Tripartite_interaction"}, {"name": "host", "value": "A02-03-00033"}, {"name": "thread", "value": "15480-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_flow.test_Tripartite_interaction.test_Tripartite_interaction"}], "links": [{"type": "test_case", "url": "http://10.10.128.152:10052/#/account/login", "name": "三方（企业，银行，前端）交互 👇"}]}