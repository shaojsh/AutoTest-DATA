{"name": "test_businessInforReg", "status": "broken", "statusDetails": {"message": "airtest.core.error.TargetNotFoundError: 'Picture Template(C:\\\\Users\\\\shaojunshuai\\\\PycharmProjects\\\\AutoTest-python\\\\Auto_Test\\\\test_data\\\\picture\\\\id_6.png) not found in screen'", "trace": "@pytest.mark.run(order=3)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 http://10.10.128.152:10053/personal/baseinfo 企业认证\")\n    @allure.testcase(\"http://10.10.128.152:10053/personal/baseinfo\", \"企业认证 👇\")\n    def test_businessInforReg():\n        if runMode == 'UI':\n            def_name = sys._getframe().f_code.co_name\n            test_Assert = Assert.Assertions(def_name)\n            logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n            driver = webdriver.Chrome()\n            driver.maximize_window()\n            driver.get(url_forward)\n    \n            # 登陆页面\n            login(driver)\n            waitUntilDisplay(driver, path_businessInfoReg.txt_aut_css.value)\n            txt_auTitle = driver.find_element_by_css_selector(path_businessInfoReg.txt_aut_css.value).text\n            test_Assert.assert_text_ui(txt_auTitle, '企业基本资料')\n            logger.info(\"企业基本资料画面正常显示\")\n    \n            # 企业证件\n            el = driver.find_element_by_css_selector(path_businessInfoReg.input_companyName_css.value)\n            el.send_keys('诚泰融资租赁（上海）有限公司')\n            waitUntilDisplay_xpath(driver, path_businessInfoReg.display_name_xpath.value)\n            el.send_keys(Keys.ENTER)\n            sleep(1)\n            # driver.find_element_by_css_selector(path_businessInfoReg.input_companyCode_css.value).send_keys(\n            #     \"92520628MA6FK07055\")\n            # driver.find_element_by_css_selector(path_businessInfoReg.input_legalPersonName_css.value).send_keys(\"黄小明\")\n            driver.find_element_by_css_selector(path_businessInfoReg.input_legalPersonCardNo_css.value).send_keys(idNum)\n            # driver.find_element_by_css_selector(path_businessInfoReg.input_legalPersonAddress_css.value).send_keys(\n            #     \"上海市浦东新区陆家嘴金砖大厦\")\n            driver.find_element_by_css_selector(path_businessInfoReg.input_legalPersonPostCode_css.value).send_keys(\n                \"200120\")\n            # driver.find_element_by_css_selector(path_businessInfoReg.input_legalPersonIndustry_css.value).send_keys(\"金融\")\n    \n            picture_dir = os.getcwd() + '\\\\test_data\\\\picture\\\\id_3.jpg'\n            driver.find_element_by_css_selector(path_businessInfoReg.upload_legalPersonCertificate_css.value).send_keys(\n                picture_dir)\n            # 生成随机银行号码\n            bankNO = random.randint(0, 99999999999999)\n            driver.find_element_by_css_selector(path_businessInfoReg.upload_legalPersonBankNo_css.value).send_keys(\n                str(bankNO))\n            sleep(1)\n            while True:\n                try:\n                    driver.find_element_by_css_selector(path_businessInfoReg.sel_bankName_css.value).click()\n                    sleep(1)\n                    driver.find_element_by_xpath(path_businessInfoReg.sel_bankName_xpath.value).click()\n                    break\n                except:\n                    continue\n            # 操作滚动条\n            # js = \"window.scrollTo(100,450);\"\n            # driver.execute_script(js)\n            sleep(1)\n            while True:\n                try:\n                    # 法定代表人信息\n                    driver.find_element_by_css_selector(path_businessInfoReg.sel_country_css.value).click()\n                    sleep(1)\n                    driver.find_element_by_xpath(path_businessInfoReg.sel_country_xpath.value).click()\n                    break\n                except:\n                    continue\n    \n            sleep(1)\n            picture_dir2 = os.getcwd() + '\\\\test_data\\\\picture\\\\id_1.jpg'\n            picture_dir3 = os.getcwd() + '\\\\test_data\\\\picture\\\\id_2.jpg'\n            picture_dir4 = os.getcwd() + '\\\\test_data\\\\picture\\\\id_4.jpg'\n    \n            driver.find_element_by_css_selector(path_businessInfoReg.sel_idCard1_css.value).send_keys(\n                picture_dir2)\n            driver.find_element_by_css_selector(path_businessInfoReg.sel_idCard2_css.value).send_keys(\n                picture_dir3)\n    \n            # 实际控制人信息\n            sleep(1)\n            driver.find_element_by_css_selector(path_businessInfoReg.radio_controlPerson_css.value).click()\n            driver.find_element_by_css_selector(path_businessInfoReg.upload_controlPersonId1_css.value).send_keys(\n                picture_dir2)\n            driver.find_element_by_css_selector(path_businessInfoReg.upload_controlPersonId2_css.value).send_keys(\n                picture_dir3)\n            driver.find_element_by_css_selector(path_businessInfoReg.upload_controlPersonFamPic_css.value).send_keys(\n                picture_dir4)\n            sleep(1)\n            driver.find_element_by_css_selector(path_businessInfoReg.radio_legalPerson_css.value).click()\n            waitUntilClick(driver, path_businessInfoReg.bth_submit_css.value)\n            driver.find_element_by_css_selector(path_businessInfoReg.bth_submit_css.value).click()\n    \n            waitUntilDisplay(driver, path_businessInfoReg.text_atCof_css.value)\n            txt_startAuTitle = driver.find_element_by_css_selector(path_businessInfoReg.text_atCof_css.value).text\n            test_Assert.assert_text_ui(txt_startAuTitle, '请确认协议内容')\n            logger.info(\"协议确认画面正常显示\")\n            waitUntilClick_xpath(driver, path_businessInfoReg.checkBox_agree_xpath.value)\n            sleep(1)\n            driver.find_element_by_xpath(path_businessInfoReg.checkBox_agree_xpath.value).click()\n            waitUntilClick(driver, path_businessInfoReg.btn_Certification_css.value)\n            driver.find_element_by_css_selector(path_businessInfoReg.btn_Certification_css.value).click()\n    \n            waitUntilDisplay(driver, path_businessInfoReg.text_atMid_css.value)\n            txt_middleAuTitle = driver.find_element_by_css_selector(path_businessInfoReg.text_atMid_css.value).text\n            test_Assert.assert_text_ui(txt_middleAuTitle, '认证中')\n            logger.info(\"企业信息认证中画面正常显示\")\n    \n            # 活体认证欺诈性校验\n            getVerification_ui(RequestURL, act)\n    \n            WebDriverWait(driver, 1200).until(\n                EC.presence_of_element_located((By.CSS_SELECTOR, path_businessInfoReg.text_bank_css.value)))\n    \n            driver.find_element_by_css_selector(path_businessInfoReg.input_moneyNum_css.value).send_keys('0.5')\n            driver.find_element_by_css_selector(path_businessInfoReg.btn_middleCnf_css.value).click()\n            sleep(3)\n            waitUntilDisplay(driver, path_businessInfoReg.txt_examine_css.value)\n            txt_examineAuTitle = driver.find_element_by_css_selector(path_businessInfoReg.txt_examine_css.value).text\n            test_Assert.assert_text_ui(txt_examineAuTitle, '审核中')\n            logger.info(\"企业信息审核中画面正常显示\")\n            driver.find_element_by_css_selector(path_businessInfoReg.btn_primary_css.value).click()\n    \n            # 登陆页面\n            waitUntilDisplay(driver, path_businessInfoReg.txt_aut_css.value)\n            txt_auTitle = driver.find_element_by_css_selector(path_businessInfoReg.txt_aut_css.value).text\n            test_Assert.assert_text_ui(txt_auTitle, '企业基本资料')\n            logger.info(\"企业基本资料画面正常显示\")\n            driver.quit()\n        else:\n            logger.info('企业认证画面')\n            waiteForClick(mobileDriver(text='我的'))\n            waiteForClick(mobileDriver(text='企业认证'))\n            sleep(1)\n            waiteForClick(mobileDriver(text='*上传营业执照').parent().child()[2].child())\n            waiteForClick(mobileDriver(text='所有图片'))\n            waiteForClick(mobileDriver(text='自动化测试专用相册'))\n            mobileDriver(\"android.widget.LinearLayout\").offspring(\"com.tencent.mm:id/dm6\").child(\"com.tencent.mm:id/f4b\")[\n                1].child(\n                \"com.tencent.mm:id/dm8\").click()\n            waiteForClick(mobileDriver(text='完成'))\n            sleep(2)\n            waiteForClick(mobileDriver(text='*邮政编码').parent().child()[2])\n            text(\"123456\")\n            mobileDriver(text='*邮政编码').click()\n            mobileDriver(text='法人代表证件').drag_to(mobileDriver(text='企业证件照'), 0.5)\n            waiteForClick(mobileDriver(text='*我是').parent().child()[2].child().child())\n            waiteForClick(mobileDriver(text='*法人代表归属地').parent().child()[2].child())\n            waiteForClick(mobileDriver(text='中国境内'))\n            sleep(2)\n            waiteForClick(mobileDriver(text='*实控人身份').parent().child()[2].child().child())\n    \n            waiteForClick(mobileDriver(text='*实控人户口本主页').parent().child()[2].child())\n            waiteForClick(mobileDriver(text='所有图片'))\n            waiteForClick(mobileDriver(text='自动化测试专用相册'))\n            mobileDriver(\"android.widget.LinearLayout\").offspring(\"com.tencent.mm:id/dm6\").child(\"com.tencent.mm:id/f4b\")[\n                0].child(\n                \"com.tencent.mm:id/dm8\").click()\n            waiteForClick(mobileDriver(text='完成'))\n            sleep(2)\n            waiteForClick(mobileDriver(text='*实控人婚姻状况').parent().child()[2].child().child()[1])\n            waiteForClick(mobileDriver(text='*对公银行账号').parent().child()[2])\n            bankNO = random.randint(0, 99999999999999)\n            text(str(bankNO))\n            mobileDriver(text='*对公银行账号').click()\n            waiteForClick(mobileDriver(text='*对公开户银行').parent().child()[2].child().child())\n            waiteForClick(mobileDriver(text='鞍山银行'))\n    \n            waiteForClick(mobileDriver(text='下一步'))\n            logger.info('平台服务协议画面')\n            waiteForClick(mobileDriver(text='我已阅读并同意'))\n            waiteForClick(mobileDriver(text='请输入打款金额'))\n            text('0.1')\n            waiteForClick(mobileDriver(text='收到的金额'))\n            waiteForClick(mobileDriver(text='确认提交'))\n            sleep(1)\n            picture_dir = os.getcwd() + '\\\\test_data\\\\picture\\\\id_6.png'\n>           touch(Template(picture_dir))\n\ntest_flow\\test_Authentication\\test_businessInfoReg.py:205: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\airtest\\utils\\logwraper.py:71: in wrapper\n    res = f(*args, **kwargs)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\airtest\\core\\api.py:260: in touch\n    pos = loop_find(v, timeout=ST.FIND_TIMEOUT)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\airtest\\utils\\logwraper.py:71: in wrapper\n    res = f(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nquery = Template(C:\\Users\\shaojunshuai\\PycharmProjects\\AutoTest-python\\Auto_Test\\test_data\\picture\\id_6.png)\ntimeout = 20, threshold = None, interval = 0.5, intervalfunc = None\n\n    @logwrap\n    def loop_find(query, timeout=ST.FIND_TIMEOUT, threshold=None, interval=0.5, intervalfunc=None):\n        \"\"\"\n        Search for image template in the screen until timeout\n    \n        Args:\n            query: image template to be found in screenshot\n            timeout: time interval how long to look for the image template\n            threshold: default is None\n            interval: sleep interval before next attempt to find the image template\n            intervalfunc: function that is executed after unsuccessful attempt to find the image template\n    \n        Raises:\n            TargetNotFoundError: when image template is not found in screenshot\n    \n        Returns:\n            TargetNotFoundError if image template not found, otherwise returns the position where the image template has\n            been found in screenshot\n    \n        \"\"\"\n        G.LOGGING.info(\"Try finding:\\n%s\", query)\n        start_time = time.time()\n        while True:\n            screen = G.DEVICE.snapshot(filename=None, quality=ST.SNAPSHOT_QUALITY)\n    \n            if screen is None:\n                G.LOGGING.warning(\"Screen is None, may be locked\")\n            else:\n                if threshold:\n                    query.threshold = threshold\n                match_pos = query.match_in(screen)\n                if match_pos:\n                    try_log_screen(screen)\n                    return match_pos\n    \n            if intervalfunc is not None:\n                intervalfunc()\n    \n            # 超时则raise，未超时则进行下次循环:\n            if (time.time() - start_time) > timeout:\n                try_log_screen(screen)\n>               raise TargetNotFoundError('Picture %s not found in screen' % query)\nE               airtest.core.error.TargetNotFoundError: 'Picture Template(C:\\\\Users\\\\shaojunshuai\\\\PycharmProjects\\\\AutoTest-python\\\\Auto_Test\\\\test_data\\\\picture\\\\id_6.png) not found in screen'\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\airtest\\core\\cv.py:77: TargetNotFoundError"}, "description": "测试 http://10.10.128.152:10053/personal/baseinfo 企业认证", "attachments": [{"name": "log", "source": "ab466a71-3a6b-4fa2-bb55-2bda382eddd4-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "674bbada-1654-45da-bd9c-845672ef4942-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "0913e2bf-8c53-4f08-a56d-c70b4e3061f9-attachment.txt", "type": "text/plain"}], "start": 1603763395487, "stop": 1603763512934, "uuid": "d46b3397-35f9-4e23-b64c-a32e58791ffd", "historyId": "673c6cf796d54f5cbc2e9852ef4f69c7", "testCaseId": "b3e74db3e441c16c318663de4be2f7da", "fullName": "test_flow.test_Authentication.test_businessInfoReg#test_businessInforReg", "labels": [{"name": "severity", "value": "blocker"}, {"name": "tag", "value": "run(order=3)"}, {"name": "parentSuite", "value": "test_flow.test_Authentication"}, {"name": "suite", "value": "test_businessInfoReg"}, {"name": "host", "value": "A02-03-00033"}, {"name": "thread", "value": "12668-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_flow.test_Authentication.test_businessInfoReg"}], "links": [{"type": "test_case", "url": "http://10.10.128.152:10053/personal/baseinfo", "name": "企业认证 👇"}]}