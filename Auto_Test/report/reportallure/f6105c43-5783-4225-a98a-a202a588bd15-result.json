{"name": "test_infoReg", "status": "broken", "statusDetails": {"message": "pymysql.err.ProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'a left join `chengtay-zcd`.enterprise_account b on a.id = b.enterpriseId where b' at line 1\")", "trace": "@pytest.mark.run(order=1)\n    @allure.severity(\"blocker\")\n    @allure.description(\"ÊµãËØï http://10.10.128.152:10053/personal/set/certification ‰∏™‰∫∫ÂÆûÂêçËÆ§ËØÅ\")\n    @allure.testcase(\"http://10.10.128.152:10053/personal/set/certification\", \"‰∏™‰∫∫ÂÆûÂêçËÆ§ËØÅ üëá\")\n    def test_infoReg():\n        def_name = sys._getframe().f_code.co_name\n        test_Assert = Assert.Assertions(def_name)\n        logger.info(\"ÂºÄÂßãÊâßË°åËÑöÊú¨%s:\\n\", def_name)\n    \n        # ÂØπ‰∏™‰∫∫‰ø°ÊÅØ‰ºÅ‰∏ö‰ø°ÊÅØËøõË°åÂà†Èô§Êìç‰Ωú\n>       deletePerInforAndComInfor()\n\ntest_flow\\test_Authentication\\test_personalInfoReg.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\dbLink.py:70: in deletePerInforAndComInfor\n    Sqldata(sqlStr5, 2)\ncommon\\dbLink.py:24: in Sqldata\n    cursor.execute(sqlStr)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:163: in execute\n    result = self._query(query)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:321: in _query\n    conn.query(q)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:505: in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:724: in _read_query_result\n    result.read()\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:1069: in read\n    first_packet = self.connection._read_packet()\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:676: in _read_packet\n    packet.raise_for_error()\n..\\venv\\lib\\site-packages\\pymysql\\protocol.py:223: in raise_for_error\n    err.raise_mysql_exception(self._data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = b\"\\xff(\\x04#42000You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version ... right syntax to use near 'a left join `chengtay-zcd`.enterprise_account b on a.id = b.enterpriseId where b' at line 1\"\n\n    def raise_mysql_exception(data):\n        errno = struct.unpack('<h', data[1:3])[0]\n        errval = data[9:].decode('utf-8', 'replace')\n        errorclass = error_map.get(errno)\n        if errorclass is None:\n            errorclass = InternalError if errno < 1000 else OperationalError\n>       raise errorclass(errno, errval)\nE       pymysql.err.ProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'a left join `chengtay-zcd`.enterprise_account b on a.id = b.enterpriseId where b' at line 1\")\n\n..\\venv\\lib\\site-packages\\pymysql\\err.py:107: ProgrammingError"}, "description": "ÊµãËØï http://10.10.128.152:10053/personal/set/certification ‰∏™‰∫∫ÂÆûÂêçËÆ§ËØÅ", "attachments": [{"name": "log", "source": "e55856fd-6923-4e43-86a2-21dd070683db-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "2e8452d4-e1da-4293-a545-9eb2035cefcb-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "9b08d813-e2b6-4310-875e-dea86482f5a0-attachment.txt", "type": "text/plain"}], "start": 1596681176080, "stop": 1596681176109, "uuid": "7f265272-5b9d-4572-a1ff-3e8c975c51e1", "historyId": "28dda5313ff182aeade3becf47df4372", "testCaseId": "9cbf013f05cb6ad37536fb98be3bcb37", "fullName": "test_flow.test_Authentication.test_personalInfoReg#test_infoReg", "labels": [{"name": "severity", "value": "blocker"}, {"name": "tag", "value": "run(order=1)"}, {"name": "parentSuite", "value": "test_flow.test_Authentication"}, {"name": "suite", "value": "test_personalInfoReg"}, {"name": "host", "value": "A02-03-00033"}, {"name": "thread", "value": "15908-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_flow.test_Authentication.test_personalInfoReg"}], "links": [{"type": "test_case", "url": "http://10.10.128.152:10053/personal/set/certification", "name": "‰∏™‰∫∫ÂÆûÂêçËÆ§ËØÅ üëá"}]}