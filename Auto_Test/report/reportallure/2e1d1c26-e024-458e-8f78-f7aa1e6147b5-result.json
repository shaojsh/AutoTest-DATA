{"name": "test_businessInforReg", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "@pytest.mark.run(order=3)\n    @allure.severity(\"blocker\")\n    @allure.description(\"ÊµãËØï http://10.10.128.152:10053/personal/baseinfo ‰ºÅ‰∏öËÆ§ËØÅ\")\n    @allure.testcase(\"http://10.10.128.152:10053/personal/baseinfo\", \"‰ºÅ‰∏öËÆ§ËØÅ üëá\")\n    def test_businessInforReg():\n        if runMode == 'UI':\n            def_name = sys._getframe().f_code.co_name\n            test_Assert = Assert.Assertions(def_name)\n            logger.info(\"ÂºÄÂßãÊâßË°åËÑöÊú¨%s:\\n\", def_name)\n            if jenkins:\n                option = webdriver.ChromeOptions()\n                option.add_argument('headless')  # ÊµèËßàÂô®‰∏çÊèê‰æõÂèØËßÜÂåñÈ°µÈù¢\n                option.add_argument('no-sandbox')  # ‰ª•ÊúÄÈ´òÊùÉÈôêËøêË°å\n                option.add_argument('--start-maximized')  # ÊúÄÂ§ßÂåñËøêË°åÔºàÂÖ®Â±èÁ™óÂè£ÔºâËÆæÁΩÆÂÖÉÁ¥†ÂÆö‰ΩçÊØîËæÉÂáÜÁ°Æ\n                option.add_argument('--disable-gpu')  # Ë∞∑Ê≠åÊñáÊ°£ÊèêÂà∞ÈúÄË¶ÅÂä†‰∏äËøô‰∏™Â±ûÊÄßÊù•ËßÑÈÅøbug\n                option.add_argument('--window-size=1920,1080')  # ËÆæÁΩÆÊµèËßàÂô®ÂàÜËæ®ÁéáÔºàÁ™óÂè£Â§ßÂ∞èÔºâ\n                driver = webdriver.Chrome(options=option)\n            else:\n                driver = webdriver.Chrome(executable_path=driverPath)\n            driver.maximize_window()\n            driver.get(url_forward)\n    \n            # ÁôªÈôÜÈ°µÈù¢\n            login(driver)\n>           waitUntilDisplay(driver, path_businessInfoReg.txt_aut_css.value)\n\ntest_flow\\test_Authentication\\test_businessInfoReg.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\BaseFunction.py:23: in waitUntilDisplay\n    WebDriverWait(driver, 30).until(EC.visibility_of_element_located((By.CSS_SELECTOR, ByCss)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5ac4ef4ede89712e5393dc6515b42e1f\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0000022F6986D940>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "description": "ÊµãËØï http://10.10.128.152:10053/personal/baseinfo ‰ºÅ‰∏öËÆ§ËØÅ", "attachments": [{"name": "log", "source": "327be9ea-4e01-4afb-9083-162710e4dda6-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "0bfe0de4-d679-4eae-b395-d11ed05dd206-attachment.txt", "type": "text/plain"}], "start": 1609735949633, "stop": 1609735998839, "uuid": "16896aa6-2026-4fb6-93aa-2de5f36494d4", "historyId": "673c6cf796d54f5cbc2e9852ef4f69c7", "testCaseId": "b3e74db3e441c16c318663de4be2f7da", "fullName": "test_flow.test_Authentication.test_businessInfoReg#test_businessInforReg", "labels": [{"name": "severity", "value": "blocker"}, {"name": "tag", "value": "run(order=3)"}, {"name": "parentSuite", "value": "test_flow.test_Authentication"}, {"name": "suite", "value": "test_businessInfoReg"}, {"name": "host", "value": "A02-03-00033"}, {"name": "thread", "value": "13812-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_flow.test_Authentication.test_businessInfoReg"}], "links": [{"type": "test_case", "url": "http://10.10.128.152:10053/personal/baseinfo", "name": "‰ºÅ‰∏öËÆ§ËØÅ üëá"}]}