{"name": "test_businessInforReg", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "@pytest.mark.run(order=3)\n    @allure.severity(\"blocker\")\n    @allure.description(\"ÊµãËØï http://10.10.128.152:10053/personal/baseinfo ‰ºÅ‰∏öËÆ§ËØÅ\")\n    @allure.testcase(\"http://10.10.128.152:10053/personal/baseinfo\", \"‰ºÅ‰∏öËÆ§ËØÅ üëá\")\n    def test_businessInforReg():\n        def_name = sys._getframe().f_code.co_name\n        test_Assert = Assert.Assertions(def_name)\n        logger.info(\"ÂºÄÂßãÊâßË°åËÑöÊú¨%s:\\n\", def_name)\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(url_forward)\n    \n        # ÁôªÈôÜÈ°µÈù¢\n        login(driver)\n        waitUntilDisplay(driver, path_businessInfoReg.txt_aut_css.value)\n        txt_auTitle = driver.find_element_by_css_selector(path_businessInfoReg.txt_aut_css.value).text\n        test_Assert.assert_text_ui(txt_auTitle, '‰ºÅ‰∏öÂü∫Êú¨ËµÑÊñô')\n        logger.info(\"‰ºÅ‰∏öÂü∫Êú¨ËµÑÊñôÁîªÈù¢Ê≠£Â∏∏ÊòæÁ§∫\")\n    \n        # ‰ºÅ‰∏öËØÅ‰ª∂\n        el = driver.find_element_by_css_selector(path_businessInfoReg.input_companyName_css.value)\n        el.send_keys(businessName)\n        waitUntilDisplay_xpath(driver, path_businessInfoReg.display_name_xpath.value)\n        el.send_keys(Keys.ENTER)\n        sleep(1)\n        # driver.find_element_by_css_selector(path_businessInfoReg.input_companyCode_css.value).send_keys(\n        #     \"92520628MA6FK07055\")\n        # driver.find_element_by_css_selector(path_businessInfoReg.input_legalPersonName_css.value).send_keys(\"ÈªÑÂ∞èÊòé\")\n        driver.find_element_by_css_selector(path_businessInfoReg.input_legalPersonCardNo_css.value).send_keys(\n            \"110101199003077096\")\n        # driver.find_element_by_css_selector(path_businessInfoReg.input_legalPersonAddress_css.value).send_keys(\n        #     \"‰∏äÊµ∑Â∏ÇÊµ¶‰∏úÊñ∞Âå∫ÈôÜÂÆ∂Âò¥ÈáëÁ†ñÂ§ßÂé¶\")\n        driver.find_element_by_css_selector(path_businessInfoReg.input_legalPersonPostCode_css.value).send_keys(\"200120\")\n        # driver.find_element_by_css_selector(path_businessInfoReg.input_legalPersonIndustry_css.value).send_keys(\"ÈáëËûç\")\n    \n        picture_dir = os.getcwd() + '\\\\test_data\\\\picture\\\\id_3.jpg'\n        driver.find_element_by_css_selector(path_businessInfoReg.upload_legalPersonCertificate_css.value).send_keys(\n            picture_dir)\n        # ÁîüÊàêÈöèÊú∫Èì∂Ë°åÂè∑Á†Å\n        bankNO = random.randint(0, 99999999999999)\n        driver.find_element_by_css_selector(path_businessInfoReg.upload_legalPersonBankNo_css.value).send_keys(\n            str(bankNO))\n    \n        driver.find_element_by_css_selector(path_businessInfoReg.sel_bankName_css.value).click()\n        sleep(1)\n        driver.find_elements_by_xpath(\"//*[text() = '‰∏≠ÂõΩÈÇÆÊîøÂÇ®ËìÑÈì∂Ë°å']\")[0].click()\n    \n        sleep(1)\n        # Ê≥ïÂÆö‰ª£Ë°®‰∫∫‰ø°ÊÅØ\n        driver.find_element_by_css_selector(path_businessInfoReg.sel_country_css.value).click()\n        sleep(1)\n        driver.find_elements_by_xpath(\"//*[text() = '‰∏≠ÂõΩÂ¢ÉÂÜÖ']\")[0].click()\n    \n        picture_dir2 = os.getcwd() + '\\\\test_data\\\\picture\\\\id_1.jpg'\n        picture_dir3 = os.getcwd() + '\\\\test_data\\\\picture\\\\id_2.jpg'\n        picture_dir4 = os.getcwd() + '\\\\test_data\\\\picture\\\\id_4.jpg'\n    \n        driver.find_element_by_css_selector(path_businessInfoReg.sel_idCard1_css.value).send_keys(\n            picture_dir2)\n        driver.find_element_by_css_selector(path_businessInfoReg.sel_idCard2_css.value).send_keys(\n            picture_dir3)\n    \n        # ÂÆûÈôÖÊéßÂà∂‰∫∫‰ø°ÊÅØ\n        sleep(1)\n        driver.find_element_by_css_selector(path_businessInfoReg.radio_controlPerson_css.value).click()\n        driver.find_element_by_css_selector(path_businessInfoReg.upload_controlPersonId1_css.value).send_keys(\n            picture_dir2)\n        driver.find_element_by_css_selector(path_businessInfoReg.upload_controlPersonId2_css.value).send_keys(\n            picture_dir3)\n        driver.find_element_by_css_selector(path_businessInfoReg.upload_controlPersonFamPic_css.value).send_keys(\n            picture_dir4)\n        sleep(1)\n        driver.find_element_by_css_selector(path_businessInfoReg.radio_legalPerson_css.value).click()\n        waitUntilClick(driver, path_businessInfoReg.bth_submit_css.value)\n        driver.find_element_by_css_selector(path_businessInfoReg.bth_submit_css.value).click()\n    \n        waitUntilDisplay(driver, path_businessInfoReg.text_atCof_css.value)\n        txt_startAuTitle = driver.find_element_by_css_selector(path_businessInfoReg.text_atCof_css.value).text\n        test_Assert.assert_text_ui(txt_startAuTitle, 'ËØ∑Á°ÆËÆ§ÂçèËÆÆÂÜÖÂÆπ')\n        logger.info(\"ÂçèËÆÆÁ°ÆËÆ§ÁîªÈù¢Ê≠£Â∏∏ÊòæÁ§∫\")\n>       waitUntilClick_xpath(driver, path_businessInfoReg.checkBox_agree_xpath.value)\n\ntest_flow\\test_Authentication\\test_businessInfoReg.py:107: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\BaseFunction.py:38: in waitUntilClick_xpath\n    WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, ByXpath)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2d71e3e75e367cf84df4204e95b88150\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x00000245E358C940>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "description": "ÊµãËØï http://10.10.128.152:10053/personal/baseinfo ‰ºÅ‰∏öËÆ§ËØÅ", "attachments": [{"name": "log", "source": "61daf58e-cff2-4d3c-8f37-06b4dfc3ee02-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "7baba4b3-1fad-405d-86be-3f971b652e8c-attachment.txt", "type": "text/plain"}], "start": 1600757844286, "stop": 1600757895119, "uuid": "6971d0a3-ef30-41df-b761-84e6922c06a3", "historyId": "673c6cf796d54f5cbc2e9852ef4f69c7", "testCaseId": "b3e74db3e441c16c318663de4be2f7da", "fullName": "test_flow.test_Authentication.test_businessInfoReg#test_businessInforReg", "labels": [{"name": "severity", "value": "blocker"}, {"name": "tag", "value": "run(order=3)"}, {"name": "parentSuite", "value": "test_flow.test_Authentication"}, {"name": "suite", "value": "test_businessInfoReg"}, {"name": "host", "value": "A02-03-00033"}, {"name": "thread", "value": "7636-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_flow.test_Authentication.test_businessInfoReg"}], "links": [{"type": "test_case", "url": "http://10.10.128.152:10053/personal/baseinfo", "name": "‰ºÅ‰∏öËÆ§ËØÅ üëá"}]}