{"name": "test_Tripartite_interaction", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "@pytest.mark.run(order=-1)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 http://10.10.128.152:10052/#/account/login 三方（企业，银行，前端）交互\")\n    @allure.testcase(\"http://10.10.128.152:10052/#/account/login\", \"三方（企业，银行，前端）交互 👇\")\n    def test_Tripartite_interaction():\n        def_name = sys._getframe().f_code.co_name\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        # 前端账户授信申请\n        if runMode == 'UI':\n            driver_forward = webdriver.Chrome()\n            driver_forward.maximize_window()\n            driver_forward.get(url_forward)\n            logger.info('前端账户登录授信申请')\n            login(driver_forward)\n            sleep(2)\n            creditExtension(driver_forward)\n        else:\n            waiteForClick(mobileDriver(text='首页'))\n            waiteForClick(mobileDriver(text='立即申请'))\n            el = mobileDriver(text='首页', name='android.view.View', type='android.view.View')\n            dragUntilTextAppear(el, '产品服务', product_name)\n            waiteForClick(mobileDriver(text=product_name))\n            waiteForClick(mobileDriver(text='立即申请'))\n    \n            logger.info('授信采购信息画面')\n            waiteForClick(mobileDriver(text='请输入银行账号'))\n            text('123456789012')\n            mobileDriver(text='分支行').click()\n            waiteForClick(mobileDriver(text='请选择项目'))\n            waiteForClick(mobileDriver(text='请输入项目名称').parent().parent().parent().child()[2])\n            waiteForClick(mobileDriver(text='下一步'))\n    \n            logger.info('授信基本资料页面')\n            waiteForClick(mobileDriver(text='下一步'))\n    \n            logger.info('授信页面')\n            mobileDriver(text='企业经营场所照片').drag_to(mobileDriver(text='业务申请'), 0.5)\n            mobileDriver(text='企业征信').drag_to(mobileDriver(text='业务申请'), 0.5)\n            mobileDriver(text='财务证明资料').drag_to(mobileDriver(text='业务申请'), 0.5)\n            waiteForClick(mobileDriver(text='我已阅读并同意提交资料', type='android.widget.CheckBox').child().child())\n            waiteForClick(mobileDriver(text='提交授信'))\n            # 活体认证欺诈性校验\n            getVerification()\n            mobileDriver(name='com.tencent.mm:id/dc')\n            mobileDriver(name='com.tencent.mm:id/dc')\n            waiteForClick(mobileDriver(text='我的'))\n            logger.info('授信完成页面')\n    \n        # 银行授信审核\n        driver_bank = webdriver.Chrome()\n        driver_bank.maximize_window()\n        driver_bank.get(url_back)\n        logger.info('银行授信审核')\n        backStageLogin(driver_bank, company_bank, company_bank_pass, 0)\n>       CreditAudit_Bank(driver_bank)\n\ntest_flow\\test_Tripartite_interaction\\test_Tripartite_interaction.py:192: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_flow\\test_Tripartite_interaction\\test_Tripartite_interaction.py:399: in CreditAudit_Bank\n    waitUntilClick(driver_bank, path_Tripartite_interaction.btn_Check_css.value)\ncommon\\BaseFunction.py:31: in waitUntilClick\n    WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ByCss)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"13025fa538565464913b22f81869a632\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x000001E19E2CC710>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "description": "测试 http://10.10.128.152:10052/#/account/login 三方（企业，银行，前端）交互", "attachments": [{"name": "log", "source": "818ef3d2-ccac-4db1-b6b5-0b47563131b8-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "51f98243-2424-4c5e-bb6a-da65e4cbf60c-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "fec71e2a-2ce1-4e9d-92ab-4bb7a55c20bb-attachment.txt", "type": "text/plain"}], "start": 1603696786989, "stop": 1603696934516, "uuid": "b3b8ceb0-7013-4f3e-bb0b-bcfec656114a", "historyId": "d91e7b4392163e0b46289a9f8b97b16c", "testCaseId": "ff94b3cb02e8ba4f94c9f712dc0dd88c", "fullName": "test_flow.test_Tripartite_interaction.test_Tripartite_interaction#test_Tripartite_interaction", "labels": [{"name": "severity", "value": "blocker"}, {"name": "tag", "value": "run(order=-1)"}, {"name": "parentSuite", "value": "test_flow.test_Tripartite_interaction"}, {"name": "suite", "value": "test_Tripartite_interaction"}, {"name": "host", "value": "A02-03-00033"}, {"name": "thread", "value": "8624-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_flow.test_Tripartite_interaction.test_Tripartite_interaction"}], "links": [{"type": "test_case", "url": "http://10.10.128.152:10052/#/account/login", "name": "三方（企业，银行，前端）交互 👇"}]}