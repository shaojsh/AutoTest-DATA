{"name": "test_companyRegister", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "@pytest.mark.run(order=1)\n    @allure.severity(\"blocker\")\n    @allure.description(\"ÊµãËØï http://10.10.128.152:10053/user/register ‰∏≠Â∞èÂæÆ‰ºÅ‰∏öÊ≥®ÂÜåÊµÅÁ®ã\")\n    @allure.testcase(\"http://10.10.128.152:10053/user/register\", \"Ê≥®ÂÜå üëá\")\n    def test_companyRegister():\n        if runMode == 'UI':\n            def_name = sys._getframe().f_code.co_name\n            test_Assert = Assert.Assertions(def_name)\n            logger.info(\"ÂºÄÂßãÊâßË°åËÑöÊú¨%s:\\n\", def_name)\n    \n            driver = webdriver.Chrome()\n            driver.maximize_window()\n            driver.get(url_ui_register)\n            # db‰∏≠Ê∏ÖÈô§Â∑≤Ê≥®ÂÜåÁöÑË¥¶Êà∑\n            deleteInforMobile()\n            logger.info(\"ÂØπÂ∑≤Ê≥®ÂÜåÁöÑË¥¶Êà∑ËøõË°åÂà†Èô§Êìç‰Ωú\")\n            sleep(1)\n>           waitUntilClick(driver, loginOn.btn_agree_css.value)\n\ntest_flow\\test_Authentication\\test_login.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\BaseFunction.py:31: in waitUntilClick\n    WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ByCss)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f971cc156f0c8f49bce79d15b71e3777\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x00000215842CB6A0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "description": "ÊµãËØï http://10.10.128.152:10053/user/register ‰∏≠Â∞èÂæÆ‰ºÅ‰∏öÊ≥®ÂÜåÊµÅÁ®ã", "attachments": [{"name": "log", "source": "1abc5bb7-70ff-4eac-ad1b-c82713ef97d6-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "a419f2d2-0d71-486a-8de1-39bcf6024f89-attachment.txt", "type": "text/plain"}], "start": 1603335371934, "stop": 1603335413918, "uuid": "2760df20-0752-41bb-bfe2-9212a6be38fb", "historyId": "dd0646a5c1a798e47c4f25747509dea9", "testCaseId": "1fe2bac8daa9cfa6b5ae5069ce9a9205", "fullName": "test_flow.test_Authentication.test_login#test_companyRegister", "labels": [{"name": "severity", "value": "blocker"}, {"name": "tag", "value": "run(order=1)"}, {"name": "parentSuite", "value": "test_flow.test_Authentication"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "A02-03-00033"}, {"name": "thread", "value": "11472-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_flow.test_Authentication.test_login"}], "links": [{"type": "test_case", "url": "http://10.10.128.152:10053/user/register", "name": "Ê≥®ÂÜå üëá"}]}