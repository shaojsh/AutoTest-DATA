{
  "uid" : "77e54af42e1fe766",
  "name" : "test_companyPassForget",
  "fullName" : "test_flow.test_Authentication.test_login#test_companyPassForget",
  "historyId" : "acb9067300dee3cf493bfb42da37b2a5",
  "time" : {
    "start" : 1596623640262,
    "stop" : 1596623673356,
    "duration" : 33094
  },
  "description" : "测试 http://10.10.128.152:10053/user/forget 中小微企业密码修改流程",
  "descriptionHtml" : "<p>测试 http://10.10.128.152:10053/user/forget 中小微企业密码修改流程</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "@pytest.mark.run(order=2)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 http://10.10.128.152:10053/user/forget 中小微企业密码修改流程\")\n    @allure.testcase(\"http://10.10.128.152:10053/user/forget\", \"密码修改 \uD83D\uDC47\")\n    def test_companyPassForget():\n        def_name = sys._getframe().f_code.co_name\n        test_Assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(\"http://10.10.128.152:10053/user/forget\")\n    \n        driver.find_element_by_css_selector(loginOn.input_actForget_css.value).send_keys(act)\n        driver.find_element_by_css_selector(loginOn.input_codeForget_css.value).send_keys(' ')\n        waitUntilClick(driver, loginOn.btn_phoneCodeForget_css.value)\n        driver.find_element_by_css_selector(loginOn.btn_phoneCodeForget_css.value).click()\n    \n        sleep(20)\n    \n        # 密码重置页面\n        waitUntilClick(driver, loginOn.btn_next_css.value)\n        driver.find_element_by_css_selector(loginOn.btn_next_css.value).click()\n        waitUntilDisplay(driver, loginOn.txt_pwd_css.value)\n        textAct = driver.find_element_by_css_selector(loginOn.txt_pwd_css.value).text\n        sleep(2)\n        test_Assert.assert_text_ui(textAct, '重置密码')\n        logger.info(\"成功进入到密码重置页面\", )\n        driver.find_element_by_css_selector(loginOn.input_pwdForget_css.value).send_keys(pwd)\n        driver.find_element_by_css_selector(loginOn.input_pwdConfirm_css.value).send_keys(pwd)\n        waitUntilClick(driver, loginOn.btn_nextPwd_css.value)\n        driver.find_element_by_css_selector(loginOn.btn_nextPwd_css.value).click()\n    \n        # 修改完成画面\n        waitUntilDisplay(driver, loginOn.txt_changeOver_css.value)\n        textPwdChangeOver = driver.find_element_by_css_selector(loginOn.txt_changeOver_css.value).text\n>       test_Assert.assert_text_ui(textPwdChangeOver, '完成修改')\n\ntest_flow\\test_Authentication\\test_login.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.Assert.Assertions object at 0x000001AC0E6EDDF0>\nactul_result = '', except_result = '完成修改'\n\n    def assert_text_ui(self, actul_result, except_result):\n        \"\"\"\n        验证UI自动化实际值和期待值是否相同\n        :param except_result:\n        :param actul_result:\n        \"\"\"\n        try:\n>           assert actul_result == except_result\nE           AssertionError\n\ncommon\\Assert.py:122: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "测试 http://10.10.128.152:10053/user/forget 中小微企业密码修改流程",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "@pytest.mark.run(order=2)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 http://10.10.128.152:10053/user/forget 中小微企业密码修改流程\")\n    @allure.testcase(\"http://10.10.128.152:10053/user/forget\", \"密码修改 \uD83D\uDC47\")\n    def test_companyPassForget():\n        def_name = sys._getframe().f_code.co_name\n        test_Assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(\"http://10.10.128.152:10053/user/forget\")\n    \n        driver.find_element_by_css_selector(loginOn.input_actForget_css.value).send_keys(act)\n        driver.find_element_by_css_selector(loginOn.input_codeForget_css.value).send_keys(' ')\n        waitUntilClick(driver, loginOn.btn_phoneCodeForget_css.value)\n        driver.find_element_by_css_selector(loginOn.btn_phoneCodeForget_css.value).click()\n    \n        sleep(20)\n    \n        # 密码重置页面\n        waitUntilClick(driver, loginOn.btn_next_css.value)\n        driver.find_element_by_css_selector(loginOn.btn_next_css.value).click()\n        waitUntilDisplay(driver, loginOn.txt_pwd_css.value)\n        textAct = driver.find_element_by_css_selector(loginOn.txt_pwd_css.value).text\n        sleep(2)\n        test_Assert.assert_text_ui(textAct, '重置密码')\n        logger.info(\"成功进入到密码重置页面\", )\n        driver.find_element_by_css_selector(loginOn.input_pwdForget_css.value).send_keys(pwd)\n        driver.find_element_by_css_selector(loginOn.input_pwdConfirm_css.value).send_keys(pwd)\n        waitUntilClick(driver, loginOn.btn_nextPwd_css.value)\n        driver.find_element_by_css_selector(loginOn.btn_nextPwd_css.value).click()\n    \n        # 修改完成画面\n        waitUntilDisplay(driver, loginOn.txt_changeOver_css.value)\n        textPwdChangeOver = driver.find_element_by_css_selector(loginOn.txt_changeOver_css.value).text\n>       test_Assert.assert_text_ui(textPwdChangeOver, '完成修改')\n\ntest_flow\\test_Authentication\\test_login.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.Assert.Assertions object at 0x000001AC0E6EDDF0>\nactul_result = '', except_result = '完成修改'\n\n    def assert_text_ui(self, actul_result, except_result):\n        \"\"\"\n        验证UI自动化实际值和期待值是否相同\n        :param except_result:\n        :param actul_result:\n        \"\"\"\n        try:\n>           assert actul_result == except_result\nE           AssertionError\n\ncommon\\Assert.py:122: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7a3a57a57709dd4d",
      "name" : "log",
      "source" : "7a3a57a57709dd4d.txt",
      "type" : "text/plain",
      "size" : 427
    }, {
      "uid" : "7125dd8ec1161aaf",
      "name" : "stderr",
      "source" : "7125dd8ec1161aaf.txt",
      "type" : "text/plain",
      "size" : 610
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 2
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "tag",
    "value" : "run(order=2)"
  }, {
    "name" : "parentSuite",
    "value" : "test_flow.test_Authentication"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "host",
    "value" : "A02-03-00033"
  }, {
    "name" : "thread",
    "value" : "6556-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_flow.test_Authentication.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "密码修改 \uD83D\uDC47",
    "url" : "http://10.10.128.152:10053/user/forget",
    "type" : "test_case"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=2)" ]
  },
  "source" : "77e54af42e1fe766.json",
  "parameterValues" : [ ]
}