{
  "uid" : "77f6f64f7cb7c28b",
  "name" : "test_backstage_examine",
  "fullName" : "test_flow.test_Authentication.test_backStage_examine#test_backstage_examine",
  "historyId" : "fa363551da3b313dda3c470cf52ad218",
  "time" : {
    "start" : 1599631209238,
    "stop" : 1599631219288,
    "duration" : 10050
  },
  "description" : "http://10.10.128.152:10052/#/enterprise/list 企业审核",
  "descriptionHtml" : "<p>http://10.10.128.152:10052/#/enterprise/list 企业审核</p>\n",
  "status" : "broken",
  "statusMessage" : "TypeError: backStageLogin() missing 1 required positional argument: 'flag'",
  "statusTrace" : "@pytest.mark.run(order=4)\n    @allure.severity(\"blocker\")\n    @allure.description(\"http://10.10.128.152:10052/#/enterprise/list 企业审核\")\n    @allure.testcase(\"http://10.10.128.152:10052/#/enterprise/list\", \"企业审核 \uD83D\uDC47\")\n    def test_backstage_examine():\n        def_name = sys._getframe().f_code.co_name\n        test_Assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(url_back)\n    \n        act = yamldict['test_backStageUserList']['company_user']\n        pwd = yamldict['test_backStageUserList']['company_user_pass']\n    \n        # 登陆页面\n>       backStageLogin(driver, act, pwd)\nE       TypeError: backStageLogin() missing 1 required positional argument: 'flag'\n\ntest_flow\\test_Authentication\\test_backStage_examine.py:34: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "http://10.10.128.152:10052/#/enterprise/list 企业审核",
    "status" : "broken",
    "statusMessage" : "TypeError: backStageLogin() missing 1 required positional argument: 'flag'",
    "statusTrace" : "@pytest.mark.run(order=4)\n    @allure.severity(\"blocker\")\n    @allure.description(\"http://10.10.128.152:10052/#/enterprise/list 企业审核\")\n    @allure.testcase(\"http://10.10.128.152:10052/#/enterprise/list\", \"企业审核 \uD83D\uDC47\")\n    def test_backstage_examine():\n        def_name = sys._getframe().f_code.co_name\n        test_Assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(url_back)\n    \n        act = yamldict['test_backStageUserList']['company_user']\n        pwd = yamldict['test_backStageUserList']['company_user_pass']\n    \n        # 登陆页面\n>       backStageLogin(driver, act, pwd)\nE       TypeError: backStageLogin() missing 1 required positional argument: 'flag'\n\ntest_flow\\test_Authentication\\test_backStage_examine.py:34: TypeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2e18cae6670e34d",
      "name" : "log",
      "source" : "2e18cae6670e34d.txt",
      "type" : "text/plain",
      "size" : 97
    }, {
      "uid" : "98f398dc02db4521",
      "name" : "stderr",
      "source" : "98f398dc02db4521.txt",
      "type" : "text/plain",
      "size" : 144
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 2
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "tag",
    "value" : "run(order=4)"
  }, {
    "name" : "parentSuite",
    "value" : "test_flow.test_Authentication"
  }, {
    "name" : "suite",
    "value" : "test_backStage_examine"
  }, {
    "name" : "host",
    "value" : "A02-03-00033"
  }, {
    "name" : "thread",
    "value" : "11984-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_flow.test_Authentication.test_backStage_examine"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "企业审核 \uD83D\uDC47",
    "url" : "http://10.10.128.152:10052/#/enterprise/list",
    "type" : "test_case"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=4)" ]
  },
  "source" : "77f6f64f7cb7c28b.json",
  "parameterValues" : [ ]
}