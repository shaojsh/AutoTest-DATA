{
  "uid" : "e776d742307047af",
  "name" : "test_companyRegister",
  "fullName" : "test_flow.test_Authentication.test_login#test_companyRegister",
  "historyId" : "dd0646a5c1a798e47c4f25747509dea9",
  "time" : {
    "start" : 1603443917149,
    "stop" : 1603443942589,
    "duration" : 25440
  },
  "description" : "测试 http://10.10.128.152:10053/user/register 中小微企业注册流程",
  "descriptionHtml" : "<p>测试 http://10.10.128.152:10053/user/register 中小微企业注册流程</p>\n",
  "status" : "broken",
  "statusMessage" : "hrpc.exceptions.TransportDisconnected: ('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))",
  "statusTrace" : "proxy = UIObjectProxy of \"text=一键微信授权登录\", args = (), kwargs = {}\n\n    @wraps(func)\n    def wrapped(proxy, *args, **kwargs):\n        try:\n>           return func(proxy, *args, **kwargs)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = UIObjectProxy of \"text=一键微信授权登录\", focus = 'anchor', sleep_interval = None\n\n    @wait\n    def click(self, focus=None, sleep_interval=None):\n        \"\"\"\n        Perform the click action on the UI element(s) represented by the UI proxy. If this UI proxy represents a set of\n        UI elements, the first one in the set is clicked and the anchor point of the UI element is used as the default\n        one. It is also possible to click another point offset by providing ``focus`` argument.\n    \n        See ``CoordinateSystem`` for more details.\n    \n        Args:\n            focus (2-:obj:`tuple`/2-:obj:`list`/:obj:`str`): an offset point (x, y) from the top left corner of the UI\n             element(s), values must be in range of 0~1. This argument can be also specified by 'anchor' or 'center'.\n             'Center' means to click the center of bounding box of UI element.\n            sleep_interval: number of seconds to wait after this action. Default is None which is the default sleep\n             interval. This value can be configured by Poco initialization. See configuration at poco\n             :py:class:`initialization <poco.pocofw.Poco>` for more details.\n    \n        Raises:\n            PocoNoSuchNodeException: raised when the UI element does not exist\n        \"\"\"\n    \n        focus = focus or self._focus or 'anchor'\n>       pos_in_percentage = self.get_position(focus)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:332: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nproxy = UIObjectProxy of \"text=一键微信授权登录\", args = ('anchor',), kwargs = {}\nrc = <poco.proxy.ReevaluationContext object at 0x0000024F6F641400>\n\n    @wraps(func)\n    def wrapped(proxy, *args, **kwargs):\n        with ReevaluationContext(proxy) as rc:\n            if not rc.with_this_batch and proxy.poco._reevaluate_volatile_attributes:\n                proxy._evaluated = False\n>           return func(proxy, *args, **kwargs)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = UIObjectProxy of \"text=一键微信授权登录\", focus = 'anchor'\n\n    @volatile_attribute\n    def get_position(self, focus=None):\n        \"\"\"\n        Get the position of the UI elements.\n    \n        Args:\n            focus: focus point of UI proxy,  see :py:meth:`.focus() <poco.proxy.UIObjectProxy.focus>` for more details\n    \n        Returns:\n            2-list/2-tuple: coordinates (x, y) in NormalizedCoordinate system\n    \n        Raises:\n            TypeError: raised when unsupported focus type is specified\n        \"\"\"\n    \n        focus = focus or self._focus or 'anchor'\n        if focus == 'anchor':\n>           pos = self.attr('pos')\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:613: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = UIObjectProxy of \"text=一键微信授权登录\", args = ('pos',), kwargs = {}\n\n    @wraps(func)\n    def wrapped(self, *args, **kwargs):\n        try:\n>           return func(self, *args, **kwargs)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = UIObjectProxy of \"text=一键微信授权登录\", name = 'pos'\n\n    @refresh_when(PocoTargetRemovedException)\n    def attr(self, name):\n        \"\"\"\n        Retrieve the attribute of UI element by given attribute name. Return None if attribute does not exist.\n        If attribute type is :obj:`str`, it is encoded to utf-8 as :obj:`str` in Python2.7.\n    \n        Args:\n            name:\n                attribute name, it can be one of the following or any other customized type implemented by SDK\n    \n                - visible: whether or not it is visible to user\n                - text: string value of the UI element\n                - type: the type name of UI element from remote runtime\n                - pos: the position of the UI element\n                - size: the percentage size [width, height] in range of 0~1 according to the screen\n                - name: the name of UI element\n                - ...: other sdk implemented attributes\n    \n        Returns:\n            None if no such attribute or its value is None/null/nil/etc. Otherwise the attribute value is returned. The\n            returned value type is json serializable. In both py2 and py3, if the attribute value in remote is a\n            text-like object, the return value type will be :obj:`str`.\n    \n        Raises:\n            PocoNoSuchNodeException: when the UI element does not exists\n    \n        .. note:: Exception :py:class:`NodeHasBeenRemovedException` is caught automatically.\n    \n        See Also:\n            :py:meth:`UI element attributes in poco sdk definition <poco.sdk.AbstractNode.AbstractNode.getAttr>`.\n        \"\"\"\n    \n        # to optimize performance speed, retrieve only the first matched element.\n        # 优化速度，只选择第一个匹配到的节点\n>       nodes = self._do_query(multiple=False)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:734: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = UIObjectProxy of \"text=一键微信授权登录\", multiple = False, refresh = False\n\n    def _do_query(self, multiple=True, refresh=False):\n        if not self._evaluated or refresh:\n            self._nodes = self.poco.agent.hierarchy.select(self.query, multiple)\n            if len(self._nodes) == 0:\n>               raise PocoNoSuchNodeException(self)\nE               poco.exceptions.PocoNoSuchNodeException: Cannot find any visible node by query UIObjectProxy of \"text=一键微信授权登录\"\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:874: PocoNoSuchNodeException\n\nDuring handling of the above exception, another exception occurred:\n\n    @pytest.mark.run(order=1)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 http://10.10.128.152:10053/user/register 中小微企业注册流程\")\n    @allure.testcase(\"http://10.10.128.152:10053/user/register\", \"注册 \uD83D\uDC47\")\n    def test_companyRegister():\n        if runMode == 'UI':\n            def_name = sys._getframe().f_code.co_name\n            test_Assert = Assert.Assertions(def_name)\n            logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n            driver = webdriver.Chrome()\n            driver.maximize_window()\n            driver.get(url_ui_register)\n            # db中清除已注册的账户\n            deleteInforMobile()\n            logger.info(\"对已注册的账户进行删除操作\")\n            sleep(1)\n            waitUntilClick(driver, loginOn.btn_agree_css.value)\n            driver.find_element_by_css_selector(loginOn.btn_agree_css.value).click()\n    \n            waitUntilDisplay(driver, loginOn.input_act_css.value)\n            driver.find_element_by_css_selector(loginOn.input_act_css.value).send_keys(act)\n            driver.find_element_by_css_selector(loginOn.input_pwd_css.value).send_keys(pwd)\n            driver.find_element_by_css_selector(loginOn.input_conPwd_css.value).send_keys(pwd)\n            waitUntilClick(driver, loginOn.btn_phoneCode_css.value)\n            sleep(2)\n            flushDb()\n            driver.find_element_by_css_selector(loginOn.btn_phoneCode_css.value).click()\n    \n            while 1:\n                message = getPhoneMessage().get(\"regMes\")\n                if message is None:\n                    sleep(0.5)\n                    continue\n                else:\n                    break\n    \n            driver.find_element_by_css_selector(loginOn.input_phoneCode_css.value).send_keys(message.strip().strip('\"'))\n            waitUntilClick(driver, loginOn.btn_agreeReg.value)\n            driver.find_element_by_css_selector(loginOn.btn_agreeReg.value).click()\n    \n            title = driver.title\n            test_Assert.assert_text_ui(title, '中小微企业金融服务聚合平台')\n            logger.info(\"注册成功，返回到登陆页面\")\n            sleep(1)\n            driver.quit()\n        else:\n            # touch(Template(r\"C:\\Users\\shaojunshuai\\PycharmProjects\\AutoTest-python\\Auto_Test\\test_data\\picture\\id_5.png\"))\n            startWeinxin()\n            deleteInforMobile()  # 删除个人信息\n            # clearCache()\n>           mobileDriver(text='一键微信授权登录').click()\n\ntest_flow\\test_Authentication\\test_login.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:26: in wrapped\n    proxy.wait_for_appearance(timeout=proxy.poco._pre_action_wait_for_appearance)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:678: in wait_for_appearance\n    while not self.exists():\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:72: in wrapped\n    return func(proxy, *args, **kwargs)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:774: in exists\n    return self.attr('visible')\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:39: in wrapped\n    return func(self, *args, **kwargs)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:734: in attr\n    nodes = self._do_query(multiple=False)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:872: in _do_query\n    self._nodes = self.poco.agent.hierarchy.select(self.query, multiple)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\utils\\retry.py:20: in wrapped\n    raise ex\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\utils\\retry.py:15: in wrapped\n    return func(*args, **kwargs)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\utils\\hrpc\\hierarchy.py:33: in select\n    return self.selector.select(query, multiple)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\hrpc\\object_proxy.py:92: in __call__\n    return self._client__.evaluate(self.__call_no_evaluate__(remote_obj_cache, *args))\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\hrpc\\client.py:63: in evaluate\n    self.transport.send({'id': reqid, 'uri': obj_proxy._uri__, 'method': obj_proxy._invocation_path__})\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <hrpc.transport.http.HttpTransport object at 0x0000024F6F05FDD8>\nreq = {'id': 'cfc283de-03f6-42d9-9592-12c37be41d83', 'method': (('getattr', 'selector'), ('getattr', 'select'), ('call', (('...', (...))), ('', False)))), 'session_id': '44adc93c-ac51-4b4a-a18a-8b4ee3fe430c', 'uri': 'poco-uiautomation-framework'}\n\n    def send(self, req):\n        req['session_id'] = self.session_id\n        try:\n            r = requests.post(self.endpoint, data=json.dumps(req), headers={'Content-Type': 'application/json'})\n            self.rpc_client.put_response(r.json())\n        except (ConnectionError, ValueError) as e:\n>           raise TransportDisconnected(e)\nE           hrpc.exceptions.TransportDisconnected: ('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\hrpc\\transport\\http.py:26: TransportDisconnected",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "测试 http://10.10.128.152:10053/user/register 中小微企业注册流程",
    "status" : "broken",
    "statusMessage" : "hrpc.exceptions.TransportDisconnected: ('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))",
    "statusTrace" : "proxy = UIObjectProxy of \"text=一键微信授权登录\", args = (), kwargs = {}\n\n    @wraps(func)\n    def wrapped(proxy, *args, **kwargs):\n        try:\n>           return func(proxy, *args, **kwargs)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = UIObjectProxy of \"text=一键微信授权登录\", focus = 'anchor', sleep_interval = None\n\n    @wait\n    def click(self, focus=None, sleep_interval=None):\n        \"\"\"\n        Perform the click action on the UI element(s) represented by the UI proxy. If this UI proxy represents a set of\n        UI elements, the first one in the set is clicked and the anchor point of the UI element is used as the default\n        one. It is also possible to click another point offset by providing ``focus`` argument.\n    \n        See ``CoordinateSystem`` for more details.\n    \n        Args:\n            focus (2-:obj:`tuple`/2-:obj:`list`/:obj:`str`): an offset point (x, y) from the top left corner of the UI\n             element(s), values must be in range of 0~1. This argument can be also specified by 'anchor' or 'center'.\n             'Center' means to click the center of bounding box of UI element.\n            sleep_interval: number of seconds to wait after this action. Default is None which is the default sleep\n             interval. This value can be configured by Poco initialization. See configuration at poco\n             :py:class:`initialization <poco.pocofw.Poco>` for more details.\n    \n        Raises:\n            PocoNoSuchNodeException: raised when the UI element does not exist\n        \"\"\"\n    \n        focus = focus or self._focus or 'anchor'\n>       pos_in_percentage = self.get_position(focus)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:332: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nproxy = UIObjectProxy of \"text=一键微信授权登录\", args = ('anchor',), kwargs = {}\nrc = <poco.proxy.ReevaluationContext object at 0x0000024F6F641400>\n\n    @wraps(func)\n    def wrapped(proxy, *args, **kwargs):\n        with ReevaluationContext(proxy) as rc:\n            if not rc.with_this_batch and proxy.poco._reevaluate_volatile_attributes:\n                proxy._evaluated = False\n>           return func(proxy, *args, **kwargs)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = UIObjectProxy of \"text=一键微信授权登录\", focus = 'anchor'\n\n    @volatile_attribute\n    def get_position(self, focus=None):\n        \"\"\"\n        Get the position of the UI elements.\n    \n        Args:\n            focus: focus point of UI proxy,  see :py:meth:`.focus() <poco.proxy.UIObjectProxy.focus>` for more details\n    \n        Returns:\n            2-list/2-tuple: coordinates (x, y) in NormalizedCoordinate system\n    \n        Raises:\n            TypeError: raised when unsupported focus type is specified\n        \"\"\"\n    \n        focus = focus or self._focus or 'anchor'\n        if focus == 'anchor':\n>           pos = self.attr('pos')\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:613: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = UIObjectProxy of \"text=一键微信授权登录\", args = ('pos',), kwargs = {}\n\n    @wraps(func)\n    def wrapped(self, *args, **kwargs):\n        try:\n>           return func(self, *args, **kwargs)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = UIObjectProxy of \"text=一键微信授权登录\", name = 'pos'\n\n    @refresh_when(PocoTargetRemovedException)\n    def attr(self, name):\n        \"\"\"\n        Retrieve the attribute of UI element by given attribute name. Return None if attribute does not exist.\n        If attribute type is :obj:`str`, it is encoded to utf-8 as :obj:`str` in Python2.7.\n    \n        Args:\n            name:\n                attribute name, it can be one of the following or any other customized type implemented by SDK\n    \n                - visible: whether or not it is visible to user\n                - text: string value of the UI element\n                - type: the type name of UI element from remote runtime\n                - pos: the position of the UI element\n                - size: the percentage size [width, height] in range of 0~1 according to the screen\n                - name: the name of UI element\n                - ...: other sdk implemented attributes\n    \n        Returns:\n            None if no such attribute or its value is None/null/nil/etc. Otherwise the attribute value is returned. The\n            returned value type is json serializable. In both py2 and py3, if the attribute value in remote is a\n            text-like object, the return value type will be :obj:`str`.\n    \n        Raises:\n            PocoNoSuchNodeException: when the UI element does not exists\n    \n        .. note:: Exception :py:class:`NodeHasBeenRemovedException` is caught automatically.\n    \n        See Also:\n            :py:meth:`UI element attributes in poco sdk definition <poco.sdk.AbstractNode.AbstractNode.getAttr>`.\n        \"\"\"\n    \n        # to optimize performance speed, retrieve only the first matched element.\n        # 优化速度，只选择第一个匹配到的节点\n>       nodes = self._do_query(multiple=False)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:734: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = UIObjectProxy of \"text=一键微信授权登录\", multiple = False, refresh = False\n\n    def _do_query(self, multiple=True, refresh=False):\n        if not self._evaluated or refresh:\n            self._nodes = self.poco.agent.hierarchy.select(self.query, multiple)\n            if len(self._nodes) == 0:\n>               raise PocoNoSuchNodeException(self)\nE               poco.exceptions.PocoNoSuchNodeException: Cannot find any visible node by query UIObjectProxy of \"text=一键微信授权登录\"\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:874: PocoNoSuchNodeException\n\nDuring handling of the above exception, another exception occurred:\n\n    @pytest.mark.run(order=1)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 http://10.10.128.152:10053/user/register 中小微企业注册流程\")\n    @allure.testcase(\"http://10.10.128.152:10053/user/register\", \"注册 \uD83D\uDC47\")\n    def test_companyRegister():\n        if runMode == 'UI':\n            def_name = sys._getframe().f_code.co_name\n            test_Assert = Assert.Assertions(def_name)\n            logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n            driver = webdriver.Chrome()\n            driver.maximize_window()\n            driver.get(url_ui_register)\n            # db中清除已注册的账户\n            deleteInforMobile()\n            logger.info(\"对已注册的账户进行删除操作\")\n            sleep(1)\n            waitUntilClick(driver, loginOn.btn_agree_css.value)\n            driver.find_element_by_css_selector(loginOn.btn_agree_css.value).click()\n    \n            waitUntilDisplay(driver, loginOn.input_act_css.value)\n            driver.find_element_by_css_selector(loginOn.input_act_css.value).send_keys(act)\n            driver.find_element_by_css_selector(loginOn.input_pwd_css.value).send_keys(pwd)\n            driver.find_element_by_css_selector(loginOn.input_conPwd_css.value).send_keys(pwd)\n            waitUntilClick(driver, loginOn.btn_phoneCode_css.value)\n            sleep(2)\n            flushDb()\n            driver.find_element_by_css_selector(loginOn.btn_phoneCode_css.value).click()\n    \n            while 1:\n                message = getPhoneMessage().get(\"regMes\")\n                if message is None:\n                    sleep(0.5)\n                    continue\n                else:\n                    break\n    \n            driver.find_element_by_css_selector(loginOn.input_phoneCode_css.value).send_keys(message.strip().strip('\"'))\n            waitUntilClick(driver, loginOn.btn_agreeReg.value)\n            driver.find_element_by_css_selector(loginOn.btn_agreeReg.value).click()\n    \n            title = driver.title\n            test_Assert.assert_text_ui(title, '中小微企业金融服务聚合平台')\n            logger.info(\"注册成功，返回到登陆页面\")\n            sleep(1)\n            driver.quit()\n        else:\n            # touch(Template(r\"C:\\Users\\shaojunshuai\\PycharmProjects\\AutoTest-python\\Auto_Test\\test_data\\picture\\id_5.png\"))\n            startWeinxin()\n            deleteInforMobile()  # 删除个人信息\n            # clearCache()\n>           mobileDriver(text='一键微信授权登录').click()\n\ntest_flow\\test_Authentication\\test_login.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:26: in wrapped\n    proxy.wait_for_appearance(timeout=proxy.poco._pre_action_wait_for_appearance)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:678: in wait_for_appearance\n    while not self.exists():\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:72: in wrapped\n    return func(proxy, *args, **kwargs)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:774: in exists\n    return self.attr('visible')\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:39: in wrapped\n    return func(self, *args, **kwargs)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:734: in attr\n    nodes = self._do_query(multiple=False)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\proxy.py:872: in _do_query\n    self._nodes = self.poco.agent.hierarchy.select(self.query, multiple)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\utils\\retry.py:20: in wrapped\n    raise ex\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\utils\\retry.py:15: in wrapped\n    return func(*args, **kwargs)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\poco\\utils\\hrpc\\hierarchy.py:33: in select\n    return self.selector.select(query, multiple)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\hrpc\\object_proxy.py:92: in __call__\n    return self._client__.evaluate(self.__call_no_evaluate__(remote_obj_cache, *args))\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\hrpc\\client.py:63: in evaluate\n    self.transport.send({'id': reqid, 'uri': obj_proxy._uri__, 'method': obj_proxy._invocation_path__})\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <hrpc.transport.http.HttpTransport object at 0x0000024F6F05FDD8>\nreq = {'id': 'cfc283de-03f6-42d9-9592-12c37be41d83', 'method': (('getattr', 'selector'), ('getattr', 'select'), ('call', (('...', (...))), ('', False)))), 'session_id': '44adc93c-ac51-4b4a-a18a-8b4ee3fe430c', 'uri': 'poco-uiautomation-framework'}\n\n    def send(self, req):\n        req['session_id'] = self.session_id\n        try:\n            r = requests.post(self.endpoint, data=json.dumps(req), headers={'Content-Type': 'application/json'})\n            self.rpc_client.put_response(r.json())\n        except (ConnectionError, ValueError) as e:\n>           raise TransportDisconnected(e)\nE           hrpc.exceptions.TransportDisconnected: ('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\hrpc\\transport\\http.py:26: TransportDisconnected",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "adf516e5e7ffea8e",
      "name" : "log",
      "source" : "adf516e5e7ffea8e.txt",
      "type" : "text/plain",
      "size" : 5882
    }, {
      "uid" : "88ad1029f43ab630",
      "name" : "stdout",
      "source" : "88ad1029f43ab630.txt",
      "type" : "text/plain",
      "size" : 200
    }, {
      "uid" : "8e3e8cf22a11101",
      "name" : "stderr",
      "source" : "8e3e8cf22a11101.txt",
      "type" : "text/plain",
      "size" : 5866
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "tag",
    "value" : "run(order=1)"
  }, {
    "name" : "parentSuite",
    "value" : "test_flow.test_Authentication"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "host",
    "value" : "A02-03-00033"
  }, {
    "name" : "thread",
    "value" : "23204-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_flow.test_Authentication.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "注册 \uD83D\uDC47",
    "url" : "http://10.10.128.152:10053/user/register",
    "type" : "test_case"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=1)" ]
  },
  "source" : "e776d742307047af.json",
  "parameterValues" : [ ]
}