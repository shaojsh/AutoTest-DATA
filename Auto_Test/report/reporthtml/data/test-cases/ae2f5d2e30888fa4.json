{
  "uid" : "ae2f5d2e30888fa4",
  "name" : "test_backstage_examine",
  "fullName" : "test_flow.test_Authentication.test_backStage_examine#test_backstage_examine",
  "historyId" : "fa363551da3b313dda3c470cf52ad218",
  "time" : {
    "start" : 1602210480591,
    "stop" : 1602210521197,
    "duration" : 40606
  },
  "description" : "http://10.10.128.152:10052/#/enterprise/list 企业审核",
  "descriptionHtml" : "<p>http://10.10.128.152:10052/#/enterprise/list 企业审核</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "@pytest.mark.run(order=4)\n    @allure.severity(\"blocker\")\n    @allure.description(\"http://10.10.128.152:10052/#/enterprise/list 企业审核\")\n    @allure.testcase(\"http://10.10.128.152:10052/#/enterprise/list\", \"企业审核 \uD83D\uDC47\")\n    def test_backstage_examine():\n        def_name = sys._getframe().f_code.co_name\n        test_Assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(url_back)\n    \n        act = yamldict['test_backStageUserList']['company_user']\n        pwd = yamldict['test_backStageUserList']['company_user_pass']\n    \n        # 登陆页面\n>       backStageLogin(driver, act, pwd, 0)\n\ntest_flow\\test_Authentication\\test_backStage_examine.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_flow\\test_Authentication\\test_backStage_examine.py:70: in backStageLogin\n    waitUntilDisplay(driver, path_backstage_examine.txt_backstage_css.value)\ncommon\\BaseFunction.py:17: in waitUntilDisplay\n    WebDriverWait(driver, 30).until(EC.visibility_of_element_located((By.CSS_SELECTOR, ByCss)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b6d0da0967f78a465cbf944f2ce700ea\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x000001FF04FE5DD8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "http://10.10.128.152:10052/#/enterprise/list 企业审核",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "@pytest.mark.run(order=4)\n    @allure.severity(\"blocker\")\n    @allure.description(\"http://10.10.128.152:10052/#/enterprise/list 企业审核\")\n    @allure.testcase(\"http://10.10.128.152:10052/#/enterprise/list\", \"企业审核 \uD83D\uDC47\")\n    def test_backstage_examine():\n        def_name = sys._getframe().f_code.co_name\n        test_Assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(url_back)\n    \n        act = yamldict['test_backStageUserList']['company_user']\n        pwd = yamldict['test_backStageUserList']['company_user_pass']\n    \n        # 登陆页面\n>       backStageLogin(driver, act, pwd, 0)\n\ntest_flow\\test_Authentication\\test_backStage_examine.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_flow\\test_Authentication\\test_backStage_examine.py:70: in backStageLogin\n    waitUntilDisplay(driver, path_backstage_examine.txt_backstage_css.value)\ncommon\\BaseFunction.py:17: in waitUntilDisplay\n    WebDriverWait(driver, 30).until(EC.visibility_of_element_located((By.CSS_SELECTOR, ByCss)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b6d0da0967f78a465cbf944f2ce700ea\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x000001FF04FE5DD8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "becb18513d3ddeee",
      "name" : "log",
      "source" : "becb18513d3ddeee.txt",
      "type" : "text/plain",
      "size" : 95
    }, {
      "uid" : "61da88eb61e1ef66",
      "name" : "stderr",
      "source" : "61da88eb61e1ef66.txt",
      "type" : "text/plain",
      "size" : 142
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 2
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "tag",
    "value" : "run(order=4)"
  }, {
    "name" : "parentSuite",
    "value" : "test_flow.test_Authentication"
  }, {
    "name" : "suite",
    "value" : "test_backStage_examine"
  }, {
    "name" : "host",
    "value" : "A02-03-00033"
  }, {
    "name" : "thread",
    "value" : "7412-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_flow.test_Authentication.test_backStage_examine"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "企业审核 \uD83D\uDC47",
    "url" : "http://10.10.128.152:10052/#/enterprise/list",
    "type" : "test_case"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=4)" ]
  },
  "source" : "ae2f5d2e30888fa4.json",
  "parameterValues" : [ ]
}