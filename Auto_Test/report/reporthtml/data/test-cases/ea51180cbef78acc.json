{
  "uid" : "ea51180cbef78acc",
  "name" : "test_businessInforReg",
  "fullName" : "test_flow.test_Authentication.test_businessInfoReg#test_businessInforReg",
  "historyId" : "673c6cf796d54f5cbc2e9852ef4f69c7",
  "time" : {
    "start" : 1607922369706,
    "stop" : 1607922425332,
    "duration" : 55626
  },
  "description" : "测试 http://10.10.128.152:10053/personal/baseinfo 企业认证",
  "descriptionHtml" : "<p>测试 http://10.10.128.152:10053/personal/baseinfo 企业认证</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "@pytest.mark.run(order=3)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 http://10.10.128.152:10053/personal/baseinfo 企业认证\")\n    @allure.testcase(\"http://10.10.128.152:10053/personal/baseinfo\", \"企业认证 \uD83D\uDC47\")\n    def test_businessInforReg():\n        if runMode == 'UI':\n            def_name = sys._getframe().f_code.co_name\n            test_Assert = Assert.Assertions(def_name)\n            logger.info(\"开始执行脚本%s:\\n\", def_name)\n            if jenkins:\n                option = webdriver.ChromeOptions()\n                option.add_argument('headless')  # 浏览器不提供可视化页面\n                option.add_argument('no-sandbox')  # 以最高权限运行\n                option.add_argument('--start-maximized')  # 最大化运行（全屏窗口）设置元素定位比较准确\n                option.add_argument('--disable-gpu')  # 谷歌文档提到需要加上这个属性来规避bug\n                option.add_argument('--window-size=1920,1080')  # 设置浏览器分辨率（窗口大小）\n                driver = webdriver.Chrome(options=option)\n            else:\n                driver = webdriver.Chrome(executable_path=driverPath)\n            driver.maximize_window()\n            driver.get(url_forward)\n    \n            # 登陆页面\n            login(driver)\n            waitUntilDisplay(driver, path_businessInfoReg.txt_aut_css.value)\n            txt_auTitle = driver.find_element_by_css_selector(path_businessInfoReg.txt_aut_css.value).text\n            test_Assert.assert_text_ui(txt_auTitle, '企业基本资料')\n            logger.info(\"企业基本资料画面正常显示\")\n    \n            # 企业证件\n            el = driver.find_element_by_css_selector(path_businessInfoReg.input_companyName_css.value)\n            el.send_keys('诚泰融资租赁（上海）有限公司')\n            waitUntilDisplay_xpath(driver, path_businessInfoReg.display_name_xpath.value)\n            el.send_keys(Keys.ENTER)\n            sleep(1)\n    \n            driver.find_element_by_css_selector(path_businessInfoReg.input_legalIdCard_css.value).send_keys(\n                idNum)\n    \n            driver.find_element_by_css_selector(path_businessInfoReg.input_legalPhone_css.value).send_keys(\n                \"17621198933\")\n    \n            while True:\n                try:\n                    driver.find_element_by_css_selector(path_businessInfoReg.sel_province_css.value).click()\n                    sleep(0.5)\n                    driver.find_element_by_xpath(\"//*[text() = '河北省']\").click()\n                    break\n                except:\n                    continue\n            sleep(0.5)\n    \n            while True:\n                try:\n                    driver.find_element_by_css_selector(path_businessInfoReg.sel_city_css.value).click()\n                    sleep(0.5)\n                    driver.find_element_by_xpath(\"//*[text() = '邯郸市']\").click()\n                    break\n                except:\n                    continue\n            sleep(0.5)\n    \n            while True:\n                try:\n                    driver.find_element_by_css_selector(path_businessInfoReg.sel_area_css.value).click()\n                    sleep(0.5)\n                    driver.find_element_by_xpath(\"//*[text() = '复兴区']\").click()\n                    break\n                except:\n                    continue\n            sleep(1)\n            driver.find_element_by_css_selector(path_businessInfoReg.input_contractAddress_css.value).send_keys(\n                \"金砖大厦10楼\")\n    \n            driver.find_element_by_css_selector(path_businessInfoReg.input_legalPersonPostCode_css.value).send_keys(\n                \"200120\")\n    \n            picture_dir = os.getcwd() + '\\\\test_data\\\\picture\\\\id_3.jpg'\n            driver.find_element_by_css_selector(path_businessInfoReg.upload_legalPersonCertificate_css.value).send_keys(\n                picture_dir)\n            # 生成随机银行号码\n            bankNO = random.randint(0, 99999999999999)\n            driver.find_element_by_css_selector(path_businessInfoReg.upload_legalPersonBankNo_css.value).send_keys(\n                str(bankNO))\n            sleep(0.5)\n            while True:\n                try:\n                    driver.find_element_by_css_selector(path_businessInfoReg.sel_bankName_css.value).click()\n                    sleep(0.5)\n                    driver.find_element_by_xpath(\"/html/body/div[6]/div/div/div/div[2]/div[1]/div/div/div[3]\").click()\n                    break\n                except:\n                    continue\n            sleep(0.5)\n            while True:\n                try:\n                    # 法定代表人信息\n                    driver.find_element_by_css_selector(path_businessInfoReg.sel_country_css.value).click()\n                    sleep(1)\n                    driver.find_element_by_xpath(\"/html/body/div[7]/div/div/div/div[2]/div[1]/div/div/div[2]\").click()\n                    break\n                except:\n                    continue\n    \n            sleep(0.5)\n            picture_dir2 = os.getcwd() + '\\\\test_data\\\\picture\\\\id_1.jpg'\n            picture_dir3 = os.getcwd() + '\\\\test_data\\\\picture\\\\id_2.jpg'\n            picture_dir4 = os.getcwd() + '\\\\test_data\\\\picture\\\\id_4.jpg'\n    \n            driver.find_element_by_css_selector(path_businessInfoReg.sel_idCard1_css.value).send_keys(\n                picture_dir2)\n            driver.find_element_by_css_selector(path_businessInfoReg.sel_idCard2_css.value).send_keys(\n                picture_dir3)\n    \n            # 实际控制人信息\n            sleep(1)\n            driver.find_element_by_css_selector(path_businessInfoReg.radio_controlPerson_css.value).click()\n            driver.find_element_by_css_selector(path_businessInfoReg.upload_controlPersonId1_css.value).send_keys(\n                picture_dir2)\n            driver.find_element_by_css_selector(path_businessInfoReg.upload_controlPersonId2_css.value).send_keys(\n                picture_dir3)\n            driver.find_element_by_css_selector(path_businessInfoReg.upload_controlPersonFamPic_css.value).send_keys(\n                picture_dir4)\n            sleep(1)\n            driver.find_element_by_css_selector(path_businessInfoReg.radio_legalPerson_css.value).click()\n            waitUntilClick(driver, path_businessInfoReg.bth_submit_css.value)\n            driver.find_element_by_css_selector(path_businessInfoReg.bth_submit_css.value).click()\n    \n>           waitUntilDisplay(driver, path_businessInfoReg.text_atCof_css.value)\n\ntest_flow\\test_Authentication\\test_businessInfoReg.py:158: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\BaseFunction.py:23: in waitUntilDisplay\n    WebDriverWait(driver, 30).until(EC.visibility_of_element_located((By.CSS_SELECTOR, ByCss)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e50f13208cc8e262c5826aaa472b710c\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x000001A31D969A58>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1607922369627,
      "stop" : 1607922369704,
      "duration" : 77
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "测试 http://10.10.128.152:10053/personal/baseinfo 企业认证",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "@pytest.mark.run(order=3)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 http://10.10.128.152:10053/personal/baseinfo 企业认证\")\n    @allure.testcase(\"http://10.10.128.152:10053/personal/baseinfo\", \"企业认证 \uD83D\uDC47\")\n    def test_businessInforReg():\n        if runMode == 'UI':\n            def_name = sys._getframe().f_code.co_name\n            test_Assert = Assert.Assertions(def_name)\n            logger.info(\"开始执行脚本%s:\\n\", def_name)\n            if jenkins:\n                option = webdriver.ChromeOptions()\n                option.add_argument('headless')  # 浏览器不提供可视化页面\n                option.add_argument('no-sandbox')  # 以最高权限运行\n                option.add_argument('--start-maximized')  # 最大化运行（全屏窗口）设置元素定位比较准确\n                option.add_argument('--disable-gpu')  # 谷歌文档提到需要加上这个属性来规避bug\n                option.add_argument('--window-size=1920,1080')  # 设置浏览器分辨率（窗口大小）\n                driver = webdriver.Chrome(options=option)\n            else:\n                driver = webdriver.Chrome(executable_path=driverPath)\n            driver.maximize_window()\n            driver.get(url_forward)\n    \n            # 登陆页面\n            login(driver)\n            waitUntilDisplay(driver, path_businessInfoReg.txt_aut_css.value)\n            txt_auTitle = driver.find_element_by_css_selector(path_businessInfoReg.txt_aut_css.value).text\n            test_Assert.assert_text_ui(txt_auTitle, '企业基本资料')\n            logger.info(\"企业基本资料画面正常显示\")\n    \n            # 企业证件\n            el = driver.find_element_by_css_selector(path_businessInfoReg.input_companyName_css.value)\n            el.send_keys('诚泰融资租赁（上海）有限公司')\n            waitUntilDisplay_xpath(driver, path_businessInfoReg.display_name_xpath.value)\n            el.send_keys(Keys.ENTER)\n            sleep(1)\n    \n            driver.find_element_by_css_selector(path_businessInfoReg.input_legalIdCard_css.value).send_keys(\n                idNum)\n    \n            driver.find_element_by_css_selector(path_businessInfoReg.input_legalPhone_css.value).send_keys(\n                \"17621198933\")\n    \n            while True:\n                try:\n                    driver.find_element_by_css_selector(path_businessInfoReg.sel_province_css.value).click()\n                    sleep(0.5)\n                    driver.find_element_by_xpath(\"//*[text() = '河北省']\").click()\n                    break\n                except:\n                    continue\n            sleep(0.5)\n    \n            while True:\n                try:\n                    driver.find_element_by_css_selector(path_businessInfoReg.sel_city_css.value).click()\n                    sleep(0.5)\n                    driver.find_element_by_xpath(\"//*[text() = '邯郸市']\").click()\n                    break\n                except:\n                    continue\n            sleep(0.5)\n    \n            while True:\n                try:\n                    driver.find_element_by_css_selector(path_businessInfoReg.sel_area_css.value).click()\n                    sleep(0.5)\n                    driver.find_element_by_xpath(\"//*[text() = '复兴区']\").click()\n                    break\n                except:\n                    continue\n            sleep(1)\n            driver.find_element_by_css_selector(path_businessInfoReg.input_contractAddress_css.value).send_keys(\n                \"金砖大厦10楼\")\n    \n            driver.find_element_by_css_selector(path_businessInfoReg.input_legalPersonPostCode_css.value).send_keys(\n                \"200120\")\n    \n            picture_dir = os.getcwd() + '\\\\test_data\\\\picture\\\\id_3.jpg'\n            driver.find_element_by_css_selector(path_businessInfoReg.upload_legalPersonCertificate_css.value).send_keys(\n                picture_dir)\n            # 生成随机银行号码\n            bankNO = random.randint(0, 99999999999999)\n            driver.find_element_by_css_selector(path_businessInfoReg.upload_legalPersonBankNo_css.value).send_keys(\n                str(bankNO))\n            sleep(0.5)\n            while True:\n                try:\n                    driver.find_element_by_css_selector(path_businessInfoReg.sel_bankName_css.value).click()\n                    sleep(0.5)\n                    driver.find_element_by_xpath(\"/html/body/div[6]/div/div/div/div[2]/div[1]/div/div/div[3]\").click()\n                    break\n                except:\n                    continue\n            sleep(0.5)\n            while True:\n                try:\n                    # 法定代表人信息\n                    driver.find_element_by_css_selector(path_businessInfoReg.sel_country_css.value).click()\n                    sleep(1)\n                    driver.find_element_by_xpath(\"/html/body/div[7]/div/div/div/div[2]/div[1]/div/div/div[2]\").click()\n                    break\n                except:\n                    continue\n    \n            sleep(0.5)\n            picture_dir2 = os.getcwd() + '\\\\test_data\\\\picture\\\\id_1.jpg'\n            picture_dir3 = os.getcwd() + '\\\\test_data\\\\picture\\\\id_2.jpg'\n            picture_dir4 = os.getcwd() + '\\\\test_data\\\\picture\\\\id_4.jpg'\n    \n            driver.find_element_by_css_selector(path_businessInfoReg.sel_idCard1_css.value).send_keys(\n                picture_dir2)\n            driver.find_element_by_css_selector(path_businessInfoReg.sel_idCard2_css.value).send_keys(\n                picture_dir3)\n    \n            # 实际控制人信息\n            sleep(1)\n            driver.find_element_by_css_selector(path_businessInfoReg.radio_controlPerson_css.value).click()\n            driver.find_element_by_css_selector(path_businessInfoReg.upload_controlPersonId1_css.value).send_keys(\n                picture_dir2)\n            driver.find_element_by_css_selector(path_businessInfoReg.upload_controlPersonId2_css.value).send_keys(\n                picture_dir3)\n            driver.find_element_by_css_selector(path_businessInfoReg.upload_controlPersonFamPic_css.value).send_keys(\n                picture_dir4)\n            sleep(1)\n            driver.find_element_by_css_selector(path_businessInfoReg.radio_legalPerson_css.value).click()\n            waitUntilClick(driver, path_businessInfoReg.bth_submit_css.value)\n            driver.find_element_by_css_selector(path_businessInfoReg.bth_submit_css.value).click()\n    \n>           waitUntilDisplay(driver, path_businessInfoReg.text_atCof_css.value)\n\ntest_flow\\test_Authentication\\test_businessInfoReg.py:158: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\BaseFunction.py:23: in waitUntilDisplay\n    WebDriverWait(driver, 30).until(EC.visibility_of_element_located((By.CSS_SELECTOR, ByCss)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e50f13208cc8e262c5826aaa472b710c\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x000001A31D969A58>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "56db020a98ca3975",
      "name" : "log",
      "source" : "56db020a98ca3975.txt",
      "type" : "text/plain",
      "size" : 329
    }, {
      "uid" : "9c7b3f323d7d8e8e",
      "name" : "stderr",
      "source" : "9c7b3f323d7d8e8e.txt",
      "type" : "text/plain",
      "size" : 465
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "tag",
    "value" : "run(order=3)"
  }, {
    "name" : "parentSuite",
    "value" : "test_flow.test_Authentication"
  }, {
    "name" : "suite",
    "value" : "test_businessInfoReg"
  }, {
    "name" : "host",
    "value" : "A02-03-00033"
  }, {
    "name" : "thread",
    "value" : "15760-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_flow.test_Authentication.test_businessInfoReg"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "企业认证 \uD83D\uDC47",
    "url" : "http://10.10.128.152:10053/personal/baseinfo",
    "type" : "test_case"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=3)" ]
  },
  "source" : "ea51180cbef78acc.json",
  "parameterValues" : [ ]
}