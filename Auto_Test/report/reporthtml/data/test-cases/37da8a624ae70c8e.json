{
  "uid" : "37da8a624ae70c8e",
  "name" : "test_Tripartite_interaction",
  "fullName" : "test_flow.test_Tripartite_interaction.test_Tripartite_interaction#test_Tripartite_interaction",
  "historyId" : "d91e7b4392163e0b46289a9f8b97b16c",
  "time" : {
    "start" : 1598582013335,
    "stop" : 1598582123952,
    "duration" : 110617
  },
  "description" : "三方（企业，银行，前端）交互",
  "descriptionHtml" : "<p>三方（企业，银行，前端）交互</p>\n",
  "status" : "broken",
  "statusMessage" : "TypeError: Object of type path_Tripartite_interaction is not JSON serializable",
  "statusTrace" : "@pytest.mark.run(order=5)\n    @allure.severity(\"blocker\")\n    @allure.description(\"三方（企业，银行，前端）交互\")\n    @allure.testcase(\"http://10.10.128.152:10052/#/account/login\", \"三方（企业，银行，前端）交互 \uD83D\uDC47\")\n    def test_Tripartite_interaction():\n        def_name = sys._getframe().f_code.co_name\n        test_Assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        # 前端账户授信申请\n        driver_forward = webdriver.Chrome()\n        driver_forward.maximize_window()\n        driver_forward.get(url_forward)\n        logger.info('前端账户登录授信申请')\n>       creditExtension(driver_forward)\n\ntest_flow\\test_Tripartite_interaction\\test_Tripartite_interaction.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_flow\\test_Tripartite_interaction\\test_Tripartite_interaction.py:72: in creditExtension\n    driver_forward.find_elements_by_xpath(\"//*[text() = '山西省']\")[0].click()\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:598: in find_element_by_css_selector\n    return self.find_element(by=By.CSS_SELECTOR, value=css_selector)\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:976: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:319: in execute\n    response = self.command_executor.execute(driver_command, params)\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py:372: in execute\n    data = utils.dump_json(params)\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\utils.py:33: in dump_json\n    return json.dumps(json_struct)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\json\\__init__.py:231: in dumps\n    return _default_encoder.encode(obj)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\json\\encoder.py:199: in encode\n    chunks = self.iterencode(o, _one_shot=True)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\json\\encoder.py:257: in iterencode\n    return _iterencode(o, 0)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.encoder.JSONEncoder object at 0x000002661C2EFC40>\no = <path_Tripartite_interaction.select_city_css: '#city'>\n\n    def default(self, o):\n        \"\"\"Implement this method in a subclass such that it returns\n        a serializable object for ``o``, or calls the base implementation\n        (to raise a ``TypeError``).\n    \n        For example, to support arbitrary iterators, you could\n        implement default like this::\n    \n            def default(self, o):\n                try:\n                    iterable = iter(o)\n                except TypeError:\n                    pass\n                else:\n                    return list(iterable)\n                # Let the base class default method raise the TypeError\n                return JSONEncoder.default(self, o)\n    \n        \"\"\"\n>       raise TypeError(f'Object of type {o.__class__.__name__} '\n                        f'is not JSON serializable')\nE       TypeError: Object of type path_Tripartite_interaction is not JSON serializable\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\json\\encoder.py:179: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "三方（企业，银行，前端）交互",
    "status" : "broken",
    "statusMessage" : "TypeError: Object of type path_Tripartite_interaction is not JSON serializable",
    "statusTrace" : "@pytest.mark.run(order=5)\n    @allure.severity(\"blocker\")\n    @allure.description(\"三方（企业，银行，前端）交互\")\n    @allure.testcase(\"http://10.10.128.152:10052/#/account/login\", \"三方（企业，银行，前端）交互 \uD83D\uDC47\")\n    def test_Tripartite_interaction():\n        def_name = sys._getframe().f_code.co_name\n        test_Assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        # 前端账户授信申请\n        driver_forward = webdriver.Chrome()\n        driver_forward.maximize_window()\n        driver_forward.get(url_forward)\n        logger.info('前端账户登录授信申请')\n>       creditExtension(driver_forward)\n\ntest_flow\\test_Tripartite_interaction\\test_Tripartite_interaction.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_flow\\test_Tripartite_interaction\\test_Tripartite_interaction.py:72: in creditExtension\n    driver_forward.find_elements_by_xpath(\"//*[text() = '山西省']\")[0].click()\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:598: in find_element_by_css_selector\n    return self.find_element(by=By.CSS_SELECTOR, value=css_selector)\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:976: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:319: in execute\n    response = self.command_executor.execute(driver_command, params)\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py:372: in execute\n    data = utils.dump_json(params)\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\utils.py:33: in dump_json\n    return json.dumps(json_struct)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\json\\__init__.py:231: in dumps\n    return _default_encoder.encode(obj)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\json\\encoder.py:199: in encode\n    chunks = self.iterencode(o, _one_shot=True)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\json\\encoder.py:257: in iterencode\n    return _iterencode(o, 0)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.encoder.JSONEncoder object at 0x000002661C2EFC40>\no = <path_Tripartite_interaction.select_city_css: '#city'>\n\n    def default(self, o):\n        \"\"\"Implement this method in a subclass such that it returns\n        a serializable object for ``o``, or calls the base implementation\n        (to raise a ``TypeError``).\n    \n        For example, to support arbitrary iterators, you could\n        implement default like this::\n    \n            def default(self, o):\n                try:\n                    iterable = iter(o)\n                except TypeError:\n                    pass\n                else:\n                    return list(iterable)\n                # Let the base class default method raise the TypeError\n                return JSONEncoder.default(self, o)\n    \n        \"\"\"\n>       raise TypeError(f'Object of type {o.__class__.__name__} '\n                        f'is not JSON serializable')\nE       TypeError: Object of type path_Tripartite_interaction is not JSON serializable\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\json\\encoder.py:179: TypeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8fd19bc03527f6c0",
      "name" : "log",
      "source" : "8fd19bc03527f6c0.txt",
      "type" : "text/plain",
      "size" : 366
    }, {
      "uid" : "a1b5893a6de2bb2a",
      "name" : "stderr",
      "source" : "a1b5893a6de2bb2a.txt",
      "type" : "text/plain",
      "size" : 547
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "tag",
    "value" : "run(order=5)"
  }, {
    "name" : "parentSuite",
    "value" : "test_flow.test_Tripartite_interaction"
  }, {
    "name" : "suite",
    "value" : "test_Tripartite_interaction"
  }, {
    "name" : "host",
    "value" : "A02-03-00033"
  }, {
    "name" : "thread",
    "value" : "11444-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_flow.test_Tripartite_interaction.test_Tripartite_interaction"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "三方（企业，银行，前端）交互 \uD83D\uDC47",
    "url" : "http://10.10.128.152:10052/#/account/login",
    "type" : "test_case"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=5)" ]
  },
  "source" : "37da8a624ae70c8e.json",
  "parameterValues" : [ ]
}