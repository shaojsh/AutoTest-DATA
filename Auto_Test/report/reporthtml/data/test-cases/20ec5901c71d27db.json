{
  "uid" : "20ec5901c71d27db",
  "name" : "test_infoReg",
  "fullName" : "test_flow.test_Authentication.test_personalInfoReg#test_infoReg",
  "historyId" : "28dda5313ff182aeade3becf47df4372",
  "time" : {
    "start" : 1597451717251,
    "stop" : 1597451853375,
    "duration" : 136124
  },
  "description" : "测试 http://10.10.128.152:10053/personal/set/certification 个人实名认证",
  "descriptionHtml" : "<p>测试 http://10.10.128.152:10053/personal/set/certification 个人实名认证</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "@pytest.mark.run(order=2)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 http://10.10.128.152:10053/personal/set/certification 个人实名认证\")\n    @allure.testcase(\"http://10.10.128.152:10053/personal/set/certification\", \"个人实名认证 \uD83D\uDC47\")\n    def test_infoReg():\n    \n        def_name = sys._getframe().f_code.co_name\n        test_Assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        # 对个人信息企业信息进行删除操作\n        deletePerInforAndComInfor()\n        logger.info(\"对个人信息企业信息进行删除操作\")\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(\"http://10.10.128.152:10053/user/login\")\n    \n        # 登陆页面\n        login(driver)\n    \n        waitUntilDisplay(driver, loginOn.link_home_css.value)\n        homeText = driver.find_element_by_css_selector(loginOn.link_home_css.value)\n    \n        test_Assert.assert_text_ui(homeText.text, '首页')\n        logger.info(\"进入登陆页面\")\n    \n        waitUntilDisplay(driver, path_personalInfoReg.txt_aut_css.value)\n        titleText = driver.find_element_by_css_selector(path_personalInfoReg.txt_aut_css.value)\n        test_Assert.assert_text_ui(titleText.text, '实名认证')\n        logger.info(\"实名认证画面成功显示\")\n    \n        name = yamldict['test_personalInfoRegList']['name']\n        idNum = yamldict['test_personalInfoRegList']['id_card']\n    \n        driver.find_element_by_css_selector(path_personalInfoReg.input_name_css.value).send_keys(name)\n        driver.find_element_by_css_selector(path_personalInfoReg.input_idNum_css.value).send_keys(idNum)\n        BaseFunction.waitUntilClick(driver, path_personalInfoReg.btn_phoneNum_css.value)\n        driver.find_element_by_css_selector(path_personalInfoReg.btn_phoneNum_css.value).click()\n    \n        while 1:\n            message = getPhoneMessage().get(\"auMes\")\n            if message is None:\n                sleep(0.5)\n                continue\n            else:\n                break\n        driver.find_element_by_css_selector(path_personalInfoReg.input_phoneNum_css.value).send_keys(\n            message.strip().strip('\"'))\n    \n        picture_dir = os.getcwd()\n        pcture_dirOne = '\\\\test_data\\\\picture\\\\id_1.jpg'\n        pcture_dirTwo = '\\\\test_data\\\\picture\\\\id_2.jpg'\n        driver.find_element_by_css_selector(path_personalInfoReg.file_idPicture1_css.value).send_keys(\n            picture_dir + pcture_dirOne)\n        BaseFunction.waitUntilDisplay(driver, path_personalInfoReg.btn_uplaodPicture1_css.value)\n        driver.find_element_by_css_selector(path_personalInfoReg.file_idPicture2_css.value).send_keys(\n            picture_dir + pcture_dirTwo)\n        BaseFunction.waitUntilDisplay(driver, path_personalInfoReg.btn_uplaodPicture2_css.value)\n        waitUntilClick(driver, path_personalInfoReg.btn_aut_css.value)\n        driver.find_element_by_css_selector(path_personalInfoReg.btn_aut_css.value).click()\n    \n        BaseFunction.waitUntilDisplay(driver, path_personalInfoReg.txt_auting_css.value)\n        text_auting = driver.find_element_by_css_selector(path_personalInfoReg.txt_auting_css.value).text\n        test_Assert.assert_text_ui(text_auting, '认证中')\n        logger.info(\"实名认证中画面显示\")\n    \n        text_name_css = driver.find_element_by_css_selector(path_personalInfoReg.txt_name_css.value).text\n        txt_idNum_css = driver.find_element_by_css_selector(path_personalInfoReg.txt_idNum_css.value).text\n        text_phoneNum_css = driver.find_element_by_css_selector(path_personalInfoReg.txt_phoneNum_css.value).text\n    \n        test_Assert.assert_text_ui(text_name_css, name)\n        test_Assert.assert_text_ui(txt_idNum_css, idNum)\n        test_Assert.assert_text_ui(text_phoneNum_css, act)\n    \n>       WebDriverWait(driver, 120).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, path_personalInfoReg.txt_actSucess_css.value)))\n\ntest_flow\\test_Authentication\\test_personalInfoReg.py:99: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"da6cbca29b2dcdd42c22989e4b6107a3\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x000001AFFF47AF40>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "测试 http://10.10.128.152:10053/personal/set/certification 个人实名认证",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "@pytest.mark.run(order=2)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 http://10.10.128.152:10053/personal/set/certification 个人实名认证\")\n    @allure.testcase(\"http://10.10.128.152:10053/personal/set/certification\", \"个人实名认证 \uD83D\uDC47\")\n    def test_infoReg():\n    \n        def_name = sys._getframe().f_code.co_name\n        test_Assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        # 对个人信息企业信息进行删除操作\n        deletePerInforAndComInfor()\n        logger.info(\"对个人信息企业信息进行删除操作\")\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(\"http://10.10.128.152:10053/user/login\")\n    \n        # 登陆页面\n        login(driver)\n    \n        waitUntilDisplay(driver, loginOn.link_home_css.value)\n        homeText = driver.find_element_by_css_selector(loginOn.link_home_css.value)\n    \n        test_Assert.assert_text_ui(homeText.text, '首页')\n        logger.info(\"进入登陆页面\")\n    \n        waitUntilDisplay(driver, path_personalInfoReg.txt_aut_css.value)\n        titleText = driver.find_element_by_css_selector(path_personalInfoReg.txt_aut_css.value)\n        test_Assert.assert_text_ui(titleText.text, '实名认证')\n        logger.info(\"实名认证画面成功显示\")\n    \n        name = yamldict['test_personalInfoRegList']['name']\n        idNum = yamldict['test_personalInfoRegList']['id_card']\n    \n        driver.find_element_by_css_selector(path_personalInfoReg.input_name_css.value).send_keys(name)\n        driver.find_element_by_css_selector(path_personalInfoReg.input_idNum_css.value).send_keys(idNum)\n        BaseFunction.waitUntilClick(driver, path_personalInfoReg.btn_phoneNum_css.value)\n        driver.find_element_by_css_selector(path_personalInfoReg.btn_phoneNum_css.value).click()\n    \n        while 1:\n            message = getPhoneMessage().get(\"auMes\")\n            if message is None:\n                sleep(0.5)\n                continue\n            else:\n                break\n        driver.find_element_by_css_selector(path_personalInfoReg.input_phoneNum_css.value).send_keys(\n            message.strip().strip('\"'))\n    \n        picture_dir = os.getcwd()\n        pcture_dirOne = '\\\\test_data\\\\picture\\\\id_1.jpg'\n        pcture_dirTwo = '\\\\test_data\\\\picture\\\\id_2.jpg'\n        driver.find_element_by_css_selector(path_personalInfoReg.file_idPicture1_css.value).send_keys(\n            picture_dir + pcture_dirOne)\n        BaseFunction.waitUntilDisplay(driver, path_personalInfoReg.btn_uplaodPicture1_css.value)\n        driver.find_element_by_css_selector(path_personalInfoReg.file_idPicture2_css.value).send_keys(\n            picture_dir + pcture_dirTwo)\n        BaseFunction.waitUntilDisplay(driver, path_personalInfoReg.btn_uplaodPicture2_css.value)\n        waitUntilClick(driver, path_personalInfoReg.btn_aut_css.value)\n        driver.find_element_by_css_selector(path_personalInfoReg.btn_aut_css.value).click()\n    \n        BaseFunction.waitUntilDisplay(driver, path_personalInfoReg.txt_auting_css.value)\n        text_auting = driver.find_element_by_css_selector(path_personalInfoReg.txt_auting_css.value).text\n        test_Assert.assert_text_ui(text_auting, '认证中')\n        logger.info(\"实名认证中画面显示\")\n    \n        text_name_css = driver.find_element_by_css_selector(path_personalInfoReg.txt_name_css.value).text\n        txt_idNum_css = driver.find_element_by_css_selector(path_personalInfoReg.txt_idNum_css.value).text\n        text_phoneNum_css = driver.find_element_by_css_selector(path_personalInfoReg.txt_phoneNum_css.value).text\n    \n        test_Assert.assert_text_ui(text_name_css, name)\n        test_Assert.assert_text_ui(txt_idNum_css, idNum)\n        test_Assert.assert_text_ui(text_phoneNum_css, act)\n    \n>       WebDriverWait(driver, 120).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, path_personalInfoReg.txt_actSucess_css.value)))\n\ntest_flow\\test_Authentication\\test_personalInfoReg.py:99: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"da6cbca29b2dcdd42c22989e4b6107a3\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x000001AFFF47AF40>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "536730e2ddc861c",
      "name" : "log",
      "source" : "536730e2ddc861c.txt",
      "type" : "text/plain",
      "size" : 1174
    }, {
      "uid" : "beda64d3124b504a",
      "name" : "stdout",
      "source" : "beda64d3124b504a.txt",
      "type" : "text/plain",
      "size" : 479
    }, {
      "uid" : "f03924906df0d7c2",
      "name" : "stderr",
      "source" : "f03924906df0d7c2.txt",
      "type" : "text/plain",
      "size" : 1670
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "tag",
    "value" : "run(order=2)"
  }, {
    "name" : "parentSuite",
    "value" : "test_flow.test_Authentication"
  }, {
    "name" : "suite",
    "value" : "test_personalInfoReg"
  }, {
    "name" : "host",
    "value" : "A02-03-00033"
  }, {
    "name" : "thread",
    "value" : "8720-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_flow.test_Authentication.test_personalInfoReg"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "个人实名认证 \uD83D\uDC47",
    "url" : "http://10.10.128.152:10053/personal/set/certification",
    "type" : "test_case"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ {
      "uid" : "a04fda91c9704ec4",
      "status" : "passed",
      "time" : {
        "start" : 1597396621140,
        "stop" : 1597396665910,
        "duration" : 44770
      }
    }, {
      "uid" : "8b18edd5b61b98fd",
      "status" : "passed",
      "time" : {
        "start" : 1597396294367,
        "stop" : 1597396342348,
        "duration" : 47981
      }
    }, {
      "uid" : "a7a853fd13af0143",
      "status" : "passed",
      "time" : {
        "start" : 1597395262162,
        "stop" : 1597395313070,
        "duration" : 50908
      }
    }, {
      "uid" : "de4ce3f3051d570b",
      "status" : "passed",
      "time" : {
        "start" : 1597392699234,
        "stop" : 1597392744164,
        "duration" : 44930
      }
    }, {
      "uid" : "f2b7ebe9a7482db6",
      "status" : "passed",
      "time" : {
        "start" : 1597392501874,
        "stop" : 1597392544661,
        "duration" : 42787
      }
    }, {
      "uid" : "c5113faa40411516",
      "status" : "passed",
      "time" : {
        "start" : 1597392281521,
        "stop" : 1597392316474,
        "duration" : 34953
      }
    }, {
      "uid" : "d2e181d1820036ca",
      "status" : "passed",
      "time" : {
        "start" : 1597392102738,
        "stop" : 1597392151360,
        "duration" : 48622
      }
    }, {
      "uid" : "63f7c5fe06aea0c",
      "status" : "passed",
      "time" : {
        "start" : 1597391917180,
        "stop" : 1597391971382,
        "duration" : 54202
      }
    }, {
      "uid" : "854ded6ae7711da7",
      "status" : "passed",
      "time" : {
        "start" : 1597391680211,
        "stop" : 1597391776150,
        "duration" : 95939
      }
    }, {
      "uid" : "8eb744696cfa026d",
      "status" : "passed",
      "time" : {
        "start" : 1597388508019,
        "stop" : 1597388552666,
        "duration" : 44647
      }
    }, {
      "uid" : "19b923675f6f5566",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1597327442815,
        "stop" : 1597327474271,
        "duration" : 31456
      }
    }, {
      "uid" : "251f54770147bbfa",
      "status" : "passed",
      "time" : {
        "start" : 1597327334336,
        "stop" : 1597327368775,
        "duration" : 34439
      }
    }, {
      "uid" : "4a72075fb0658989",
      "status" : "passed",
      "time" : {
        "start" : 1597327133958,
        "stop" : 1597327188401,
        "duration" : 54443
      }
    }, {
      "uid" : "7043f1dc1b4ecaa0",
      "status" : "passed",
      "time" : {
        "start" : 1597327022989,
        "stop" : 1597327067179,
        "duration" : 44190
      }
    }, {
      "uid" : "21ec9936bc13350b",
      "status" : "passed",
      "time" : {
        "start" : 1597326932168,
        "stop" : 1597326976511,
        "duration" : 44343
      }
    }, {
      "uid" : "1574277278ffdfa8",
      "status" : "passed",
      "time" : {
        "start" : 1597326722650,
        "stop" : 1597326777082,
        "duration" : 54432
      }
    }, {
      "uid" : "8d641c1b78c59796",
      "status" : "passed",
      "time" : {
        "start" : 1597326403693,
        "stop" : 1597326468066,
        "duration" : 64373
      }
    }, {
      "uid" : "88a6b4301e2cd107",
      "status" : "passed",
      "time" : {
        "start" : 1597326069497,
        "stop" : 1597326127154,
        "duration" : 57657
      }
    }, {
      "uid" : "569cbc2e03a38b96",
      "status" : "passed",
      "time" : {
        "start" : 1597325956619,
        "stop" : 1597325991153,
        "duration" : 34534
      }
    }, {
      "uid" : "236d5d50bf57a77f",
      "status" : "passed",
      "time" : {
        "start" : 1597325856693,
        "stop" : 1597325901548,
        "duration" : 44855
      }
    }, {
      "uid" : "4dbfe4cc631e98cf",
      "status" : "passed",
      "time" : {
        "start" : 1597325666486,
        "stop" : 1597325743695,
        "duration" : 77209
      }
    }, {
      "uid" : "4b27d12a3346d43",
      "status" : "passed",
      "time" : {
        "start" : 1597325342060,
        "stop" : 1597325396200,
        "duration" : 54140
      }
    }, {
      "uid" : "efb863c91d499ba7",
      "status" : "passed",
      "time" : {
        "start" : 1597325111778,
        "stop" : 1597325155975,
        "duration" : 44197
      }
    }, {
      "uid" : "a34fcd6e0ee9350",
      "status" : "passed",
      "time" : {
        "start" : 1597324890259,
        "stop" : 1597324944607,
        "duration" : 54348
      }
    }, {
      "uid" : "eb4eda38e9259e40",
      "status" : "passed",
      "time" : {
        "start" : 1597324606632,
        "stop" : 1597324661718,
        "duration" : 55086
      }
    }, {
      "uid" : "3f7f5679b7333bde",
      "status" : "passed",
      "time" : {
        "start" : 1597324452518,
        "stop" : 1597324506892,
        "duration" : 54374
      }
    }, {
      "uid" : "ce3609f06712fb55",
      "status" : "passed",
      "time" : {
        "start" : 1597324234914,
        "stop" : 1597324350315,
        "duration" : 115401
      }
    }, {
      "uid" : "1acbcae4fbbde118",
      "status" : "passed",
      "time" : {
        "start" : 1597319028130,
        "stop" : 1597319092426,
        "duration" : 64296
      }
    }, {
      "uid" : "e9b72d36023b2bca",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1597318941656,
        "stop" : 1597318973318,
        "duration" : 31662
      }
    }, {
      "uid" : "caf801d0dbddfeb7",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1597318591171,
        "stop" : 1597318728604,
        "duration" : 137433
      }
    }, {
      "uid" : "2c4f985874a40acd",
      "status" : "passed",
      "time" : {
        "start" : 1597317955788,
        "stop" : 1597318051118,
        "duration" : 95330
      }
    }, {
      "uid" : "179ea94ddb73f334",
      "status" : "passed",
      "time" : {
        "start" : 1597316886543,
        "stop" : 1597316968676,
        "duration" : 82133
      }
    }, {
      "uid" : "4f04a53b83f69fb5",
      "status" : "passed",
      "time" : {
        "start" : 1597313540405,
        "stop" : 1597313594942,
        "duration" : 54537
      }
    }, {
      "uid" : "fc862fd94bcf4f7d",
      "status" : "passed",
      "time" : {
        "start" : 1597312790652,
        "stop" : 1597312838403,
        "duration" : 47751
      }
    }, {
      "uid" : "93f8b7d7e36e3cf5",
      "status" : "passed",
      "time" : {
        "start" : 1597305088687,
        "stop" : 1597305186714,
        "duration" : 98027
      }
    }, {
      "uid" : "786f6be3444cc90",
      "status" : "passed",
      "time" : {
        "start" : 1597304943807,
        "stop" : 1597305038656,
        "duration" : 94849
      }
    }, {
      "uid" : "d9217012446fde2e",
      "status" : "passed",
      "time" : {
        "start" : 1597304578240,
        "stop" : 1597304622486,
        "duration" : 44246
      }
    }, {
      "uid" : "b9f2906863422c9d",
      "status" : "passed",
      "time" : {
        "start" : 1597304326371,
        "stop" : 1597304370742,
        "duration" : 44371
      }
    }, {
      "uid" : "ab6821d4b1008067",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1597304265621,
        "stop" : 1597304297062,
        "duration" : 31441
      }
    }, {
      "uid" : "b49ad673cfed8275",
      "status" : "passed",
      "time" : {
        "start" : 1597304081771,
        "stop" : 1597304136476,
        "duration" : 54705
      }
    }, {
      "uid" : "32986c4ea51b337b",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1597303367245,
        "stop" : 1597303397590,
        "duration" : 30345
      }
    }, {
      "uid" : "2afb24a4b7bf448d",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1597303206830,
        "stop" : 1597303237147,
        "duration" : 30317
      }
    }, {
      "uid" : "249d3a8a8d46d213",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1597303076665,
        "stop" : 1597303106996,
        "duration" : 30331
      }
    }, {
      "uid" : "c896b4361f42b5ce",
      "status" : "passed",
      "time" : {
        "start" : 1597302856360,
        "stop" : 1597302901186,
        "duration" : 44826
      }
    }, {
      "uid" : "5b7a49690b054fed",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1597297794940,
        "stop" : 1597297928550,
        "duration" : 133610
      }
    }, {
      "uid" : "90e70324ab27b584",
      "status" : "passed",
      "time" : {
        "start" : 1597217297463,
        "stop" : 1597217355513,
        "duration" : 58050
      }
    }, {
      "uid" : "3b940307bc507a20",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1597216757862,
        "stop" : 1597216788671,
        "duration" : 30809
      }
    }, {
      "uid" : "25333d9216426230",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1597216334702,
        "stop" : 1597216365236,
        "duration" : 30534
      }
    }, {
      "uid" : "2a81e355ffee5494",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1597216193453,
        "stop" : 1597216223885,
        "duration" : 30432
      }
    }, {
      "uid" : "a1ca9a4aeb2072b4",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: chrome not reachable\n  (Session info: chrome=74.0.3729.108)\n  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.18362 x86_64)",
      "time" : {
        "start" : 1597215733484,
        "stop" : 1597215762305,
        "duration" : 28821
      }
    }, {
      "uid" : "88382798efc4d121",
      "status" : "passed",
      "time" : {
        "start" : 1597115457884,
        "stop" : 1597115512499,
        "duration" : 54615
      }
    }, {
      "uid" : "a9a6cc8265bcf32a",
      "status" : "passed",
      "time" : {
        "start" : 1597115133780,
        "stop" : 1597115198100,
        "duration" : 64320
      }
    }, {
      "uid" : "a2863cc88c8acec3",
      "status" : "passed",
      "time" : {
        "start" : 1597114972830,
        "stop" : 1597115047091,
        "duration" : 74261
      }
    }, {
      "uid" : "9d9c62e8e59195b2",
      "status" : "passed",
      "time" : {
        "start" : 1597114770305,
        "stop" : 1597114824486,
        "duration" : 54181
      }
    }, {
      "uid" : "f09db41d496a4dfc",
      "status" : "passed",
      "time" : {
        "start" : 1597047971218,
        "stop" : 1597048055927,
        "duration" : 84709
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=2)" ]
  },
  "source" : "20ec5901c71d27db.json",
  "parameterValues" : [ ]
}