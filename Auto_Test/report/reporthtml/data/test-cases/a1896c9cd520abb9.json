{
  "uid" : "a1896c9cd520abb9",
  "name" : "test_backStage_authentication",
  "fullName" : "test_flow.test_Authentication.test_backStage_authentication#test_backStage_authentication",
  "historyId" : "a55d1468f36f1b2cdddeddca0f290d7d",
  "time" : {
    "start" : 1600755753523,
    "stop" : 1600755847717,
    "duration" : 94194
  },
  "description" : "http://10.10.128.152:10052/#/authority/mechanism 后台账户认证",
  "descriptionHtml" : "<p>http://10.10.128.152:10052/#/authority/mechanism 后台账户认证</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "@pytest.mark.run(order=6)\n    @allure.severity(\"blocker\")\n    @allure.description(\"http://10.10.128.152:10052/#/authority/mechanism 后台账户认证\")\n    @allure.testcase(\"http://10.10.128.152:10052/#/authority/mechanism\", \"后台账户认证 \uD83D\uDC47\")\n    def test_backStage_authentication():\n        def_name = sys._getframe().f_code.co_name\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        def_name = sys._getframe().f_code.co_name\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(url_back)\n        # 银行密码修改\n        companyPassForget(driver, company_bank, 1)\n        # 担保公司密码修改\n        companyPassForget(driver, company_Guarantee, 0)\n        # 银行认证\n        authentication(driver, 0)\n    \n        driver_bank = webdriver.Chrome()\n        driver_bank.maximize_window()\n        driver_bank.get(url_back)\n>       authentication(driver_bank, 1)\n\ntest_flow\\test_Authentication\\test_backStage_authentication.py:292: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_flow\\test_Authentication\\test_backStage_authentication.py:233: in authentication\n    waitUntilClick(driver, path_backStage_authentication.btn_goToAu_css.value)\ncommon\\BaseFunction.py:24: in waitUntilClick\n    WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ByCss)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1d9829407b4a9d34d0a8d69119b611b4\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x0000019335D78B38>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "http://10.10.128.152:10052/#/authority/mechanism 后台账户认证",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "@pytest.mark.run(order=6)\n    @allure.severity(\"blocker\")\n    @allure.description(\"http://10.10.128.152:10052/#/authority/mechanism 后台账户认证\")\n    @allure.testcase(\"http://10.10.128.152:10052/#/authority/mechanism\", \"后台账户认证 \uD83D\uDC47\")\n    def test_backStage_authentication():\n        def_name = sys._getframe().f_code.co_name\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        def_name = sys._getframe().f_code.co_name\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(url_back)\n        # 银行密码修改\n        companyPassForget(driver, company_bank, 1)\n        # 担保公司密码修改\n        companyPassForget(driver, company_Guarantee, 0)\n        # 银行认证\n        authentication(driver, 0)\n    \n        driver_bank = webdriver.Chrome()\n        driver_bank.maximize_window()\n        driver_bank.get(url_back)\n>       authentication(driver_bank, 1)\n\ntest_flow\\test_Authentication\\test_backStage_authentication.py:292: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_flow\\test_Authentication\\test_backStage_authentication.py:233: in authentication\n    waitUntilClick(driver, path_backStage_authentication.btn_goToAu_css.value)\ncommon\\BaseFunction.py:24: in waitUntilClick\n    WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ByCss)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1d9829407b4a9d34d0a8d69119b611b4\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x0000019335D78B38>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6046819d662188d6",
      "name" : "log",
      "source" : "6046819d662188d6.txt",
      "type" : "text/plain",
      "size" : 1034
    }, {
      "uid" : "77f358dd6d41b6d",
      "name" : "stdout",
      "source" : "77f358dd6d41b6d.txt",
      "type" : "text/plain",
      "size" : 763
    }, {
      "uid" : "cd624423b7bd3580",
      "name" : "stderr",
      "source" : "cd624423b7bd3580.txt",
      "type" : "text/plain",
      "size" : 1575
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 3,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "tag",
    "value" : "run(order=6)"
  }, {
    "name" : "parentSuite",
    "value" : "test_flow.test_Authentication"
  }, {
    "name" : "suite",
    "value" : "test_backStage_authentication"
  }, {
    "name" : "host",
    "value" : "A02-03-00033"
  }, {
    "name" : "thread",
    "value" : "9436-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_flow.test_Authentication.test_backStage_authentication"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "后台账户认证 \uD83D\uDC47",
    "url" : "http://10.10.128.152:10052/#/authority/mechanism",
    "type" : "test_case"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=6)" ]
  },
  "source" : "a1896c9cd520abb9.json",
  "parameterValues" : [ ]
}