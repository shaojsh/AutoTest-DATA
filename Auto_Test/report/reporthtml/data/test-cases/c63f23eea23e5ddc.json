{
  "uid" : "c63f23eea23e5ddc",
  "name" : "test_backStage_authentication",
  "fullName" : "test_flow.test_Authentication.test_backStage_authentication#test_backStage_authentication",
  "historyId" : "a55d1468f36f1b2cdddeddca0f290d7d",
  "time" : {
    "start" : 1599109995150,
    "stop" : 1599110159344,
    "duration" : 164194
  },
  "description" : "http://10.10.128.152:10052/#/authority/mechanism 后台账户认证",
  "descriptionHtml" : "<p>http://10.10.128.152:10052/#/authority/mechanism 后台账户认证</p>\n",
  "status" : "broken",
  "statusMessage" : "TypeError: descriptor 'decode' for 'bytes' objects doesn't apply to a 'NoneType' object",
  "statusTrace" : "@pytest.mark.run(order=1)\n    @allure.severity(\"blocker\")\n    @allure.description(\"http://10.10.128.152:10052/#/authority/mechanism 后台账户认证\")\n    @allure.testcase(\"http://10.10.128.152:10052/#/authority/mechanism\", \"后台账户认证 \uD83D\uDC47\")\n    def test_backStage_authentication():\n        def_name = sys._getframe().f_code.co_name\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(url_back)\n        # 银行密码修改\n        companyPassForget(company_bank, 1)\n        # 担保公司密码修改\n>       companyPassForget(company_Guarantee, 0)\n\ntest_flow\\test_Authentication\\test_backStage_authentication.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_flow\\test_Authentication\\test_login.py:108: in companyPassForget\n    message = getPhoneMessage().get(\"actRisk\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def getPhoneMessage():\n        act = yamldict['test_userlist']['company_user']\n        company_bank = yamldict['test_backStageUserList']['company_bank']\n        company_Guarantee = yamldict['test_backStageUserList']['company_Guarantee']\n    \n        r = RedisSqldata()\n        keys = r.keys()\n        pipe = r.pipeline()\n        pipe_size = 100000\n        len = 0\n        key_list = []\n        print(r.pipeline())\n    \n        for key in keys:\n            key_list.append(key)\n            pipe.get(key)\n            if len < pipe_size:\n                len += 1\n            else:\n                for (k, v) in zip(key_list, pipe.execute()):\n                    len = 0\n                    key_list = []\n        phoneMessage = {}\n        for (k, v) in zip(key_list, pipe.execute()):\n            k = bytes.decode(k)\n>           v = bytes.decode(v)\nE           TypeError: descriptor 'decode' for 'bytes' objects doesn't apply to a 'NoneType' object\n\ncommon\\dbLink.py:112: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "http://10.10.128.152:10052/#/authority/mechanism 后台账户认证",
    "status" : "broken",
    "statusMessage" : "TypeError: descriptor 'decode' for 'bytes' objects doesn't apply to a 'NoneType' object",
    "statusTrace" : "@pytest.mark.run(order=1)\n    @allure.severity(\"blocker\")\n    @allure.description(\"http://10.10.128.152:10052/#/authority/mechanism 后台账户认证\")\n    @allure.testcase(\"http://10.10.128.152:10052/#/authority/mechanism\", \"后台账户认证 \uD83D\uDC47\")\n    def test_backStage_authentication():\n        def_name = sys._getframe().f_code.co_name\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(url_back)\n        # 银行密码修改\n        companyPassForget(company_bank, 1)\n        # 担保公司密码修改\n>       companyPassForget(company_Guarantee, 0)\n\ntest_flow\\test_Authentication\\test_backStage_authentication.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_flow\\test_Authentication\\test_login.py:108: in companyPassForget\n    message = getPhoneMessage().get(\"actRisk\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def getPhoneMessage():\n        act = yamldict['test_userlist']['company_user']\n        company_bank = yamldict['test_backStageUserList']['company_bank']\n        company_Guarantee = yamldict['test_backStageUserList']['company_Guarantee']\n    \n        r = RedisSqldata()\n        keys = r.keys()\n        pipe = r.pipeline()\n        pipe_size = 100000\n        len = 0\n        key_list = []\n        print(r.pipeline())\n    \n        for key in keys:\n            key_list.append(key)\n            pipe.get(key)\n            if len < pipe_size:\n                len += 1\n            else:\n                for (k, v) in zip(key_list, pipe.execute()):\n                    len = 0\n                    key_list = []\n        phoneMessage = {}\n        for (k, v) in zip(key_list, pipe.execute()):\n            k = bytes.decode(k)\n>           v = bytes.decode(v)\nE           TypeError: descriptor 'decode' for 'bytes' objects doesn't apply to a 'NoneType' object\n\ncommon\\dbLink.py:112: TypeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f5799e0773c91c98",
      "name" : "log",
      "source" : "f5799e0773c91c98.txt",
      "type" : "text/plain",
      "size" : 701
    }, {
      "uid" : "bb1b70e0474f2a7c",
      "name" : "stdout",
      "source" : "bb1b70e0474f2a7c.txt",
      "type" : "text/plain",
      "size" : 17712
    }, {
      "uid" : "cda84b4d0d9bc425",
      "name" : "stderr",
      "source" : "cda84b4d0d9bc425.txt",
      "type" : "text/plain",
      "size" : 1018
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 3
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "tag",
    "value" : "run(order=1)"
  }, {
    "name" : "parentSuite",
    "value" : "test_flow.test_Authentication"
  }, {
    "name" : "suite",
    "value" : "test_backStage_authentication"
  }, {
    "name" : "host",
    "value" : "A02-03-00033"
  }, {
    "name" : "thread",
    "value" : "17064-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_flow.test_Authentication.test_backStage_authentication"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "后台账户认证 \uD83D\uDC47",
    "url" : "http://10.10.128.152:10052/#/authority/mechanism",
    "type" : "test_case"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=1)" ]
  },
  "source" : "c63f23eea23e5ddc.json",
  "parameterValues" : [ ]
}