{
  "uid" : "83e5bff2cef6884a",
  "name" : "test_companyPassForget",
  "fullName" : "test_flow.test_Authentication.test_login#test_companyPassForget",
  "historyId" : "acb9067300dee3cf493bfb42da37b2a5",
  "time" : {
    "start" : 1597216846521,
    "stop" : 1597216889543,
    "duration" : 43022
  },
  "description" : "测试 http://10.10.128.152:10053/user/forget 中小微企业密码修改流程",
  "descriptionHtml" : "<p>测试 http://10.10.128.152:10053/user/forget 中小微企业密码修改流程</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "@pytest.mark.run(order=-1)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 http://10.10.128.152:10053/user/forget 中小微企业密码修改流程\")\n    @allure.testcase(\"http://10.10.128.152:10053/user/forget\", \"密码修改 \uD83D\uDC47\")\n    def test_companyPassForget():\n        def_name = sys._getframe().f_code.co_name\n        test_Assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(\"http://10.10.128.152:10053/user/forget\")\n    \n        driver.find_element_by_css_selector(loginOn.input_actForget_css.value).send_keys(act)\n        driver.find_element_by_css_selector(loginOn.input_codeForget_css.value).send_keys(' ')\n        waitUntilClick(driver, loginOn.btn_phoneCodeForget_css.value)\n        sleep(2)\n        driver.find_element_by_css_selector(loginOn.btn_phoneCodeForget_css.value).click()\n        sleep(10)\n        message = getPhoneMessage().get(\"forgeMes\")\n        driver.find_element_by_css_selector(loginOn.input_phoneCodeForget_css.value).send_keys(message.strip().strip('\"'))\n    \n        # 密码重置页面\n        waitUntilClick(driver, loginOn.btn_next_css.value)\n        driver.find_element_by_css_selector(loginOn.btn_next_css.value).click()\n        waitUntilDisplay(driver, loginOn.txt_pwd_css.value)\n        textAct = driver.find_element_by_css_selector(loginOn.txt_pwd_css.value).text\n        test_Assert.assert_text_ui(textAct, '重置密码')\n        logger.info(\"成功进入到密码重置页面\", )\n        driver.find_element_by_css_selector(loginOn.input_pwdForget_css.value).send_keys(pwd)\n        driver.find_element_by_css_selector(loginOn.input_pwdConfirm_css.value).send_keys(pwd)\n        waitUntilClick(driver, loginOn.btn_nextPwd_css.value)\n        driver.find_element_by_css_selector(loginOn.btn_nextPwd_css.value).click()\n    \n        # 修改完成画面\n>       waitUntilDisplay(driver, loginOn.txt_changeOver_css.value)\n\ntest_flow\\test_Authentication\\test_login.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\BaseFunction.py:11: in waitUntilDisplay\n    WebDriverWait(driver, 20).until(EC.visibility_of_element_located((By.CSS_SELECTOR, ByCss)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2271e2a75ce786a52eeb4e3385caa385\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0000022DCCF9C610>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "测试 http://10.10.128.152:10053/user/forget 中小微企业密码修改流程",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "@pytest.mark.run(order=-1)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 http://10.10.128.152:10053/user/forget 中小微企业密码修改流程\")\n    @allure.testcase(\"http://10.10.128.152:10053/user/forget\", \"密码修改 \uD83D\uDC47\")\n    def test_companyPassForget():\n        def_name = sys._getframe().f_code.co_name\n        test_Assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(\"http://10.10.128.152:10053/user/forget\")\n    \n        driver.find_element_by_css_selector(loginOn.input_actForget_css.value).send_keys(act)\n        driver.find_element_by_css_selector(loginOn.input_codeForget_css.value).send_keys(' ')\n        waitUntilClick(driver, loginOn.btn_phoneCodeForget_css.value)\n        sleep(2)\n        driver.find_element_by_css_selector(loginOn.btn_phoneCodeForget_css.value).click()\n        sleep(10)\n        message = getPhoneMessage().get(\"forgeMes\")\n        driver.find_element_by_css_selector(loginOn.input_phoneCodeForget_css.value).send_keys(message.strip().strip('\"'))\n    \n        # 密码重置页面\n        waitUntilClick(driver, loginOn.btn_next_css.value)\n        driver.find_element_by_css_selector(loginOn.btn_next_css.value).click()\n        waitUntilDisplay(driver, loginOn.txt_pwd_css.value)\n        textAct = driver.find_element_by_css_selector(loginOn.txt_pwd_css.value).text\n        test_Assert.assert_text_ui(textAct, '重置密码')\n        logger.info(\"成功进入到密码重置页面\", )\n        driver.find_element_by_css_selector(loginOn.input_pwdForget_css.value).send_keys(pwd)\n        driver.find_element_by_css_selector(loginOn.input_pwdConfirm_css.value).send_keys(pwd)\n        waitUntilClick(driver, loginOn.btn_nextPwd_css.value)\n        driver.find_element_by_css_selector(loginOn.btn_nextPwd_css.value).click()\n    \n        # 修改完成画面\n>       waitUntilDisplay(driver, loginOn.txt_changeOver_css.value)\n\ntest_flow\\test_Authentication\\test_login.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\BaseFunction.py:11: in waitUntilDisplay\n    WebDriverWait(driver, 20).until(EC.visibility_of_element_located((By.CSS_SELECTOR, ByCss)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2271e2a75ce786a52eeb4e3385caa385\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0000022DCCF9C610>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1d9ea0f7f9ea9704",
      "name" : "log",
      "source" : "1d9ea0f7f9ea9704.txt",
      "type" : "text/plain",
      "size" : 301
    }, {
      "uid" : "7ae80066063a22e5",
      "name" : "stdout",
      "source" : "7ae80066063a22e5.txt",
      "type" : "text/plain",
      "size" : 72
    }, {
      "uid" : "1e5c40a82eedec47",
      "name" : "stderr",
      "source" : "1e5c40a82eedec47.txt",
      "type" : "text/plain",
      "size" : 437
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "tag",
    "value" : "run(order=-1)"
  }, {
    "name" : "parentSuite",
    "value" : "test_flow.test_Authentication"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "host",
    "value" : "A02-03-00033"
  }, {
    "name" : "thread",
    "value" : "15760-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_flow.test_Authentication.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "密码修改 \uD83D\uDC47",
    "url" : "http://10.10.128.152:10053/user/forget",
    "type" : "test_case"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=-1)" ]
  },
  "source" : "83e5bff2cef6884a.json",
  "parameterValues" : [ ]
}