{
  "uid" : "7875a1c4b382ab24",
  "name" : "test_businessInforReg",
  "fullName" : "test_flow.test_Authentication.test_businessInfoReg#test_businessInforReg",
  "historyId" : "673c6cf796d54f5cbc2e9852ef4f69c7",
  "time" : {
    "start" : 1596768299366,
    "stop" : 1596768322980,
    "duration" : 23614
  },
  "description" : "测试 http://10.10.128.152:10053/personal/baseinfo 企业认证",
  "descriptionHtml" : "<p>测试 http://10.10.128.152:10053/personal/baseinfo 企业认证</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.UnexpectedTagNameException: Message: Select only works on <select> elements, not on <span>",
  "statusTrace" : "@pytest.mark.run(order=1)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 http://10.10.128.152:10053/personal/baseinfo 企业认证\")\n    @allure.testcase(\"http://10.10.128.152:10053/personal/baseinfo\", \"企业认证 \uD83D\uDC47\")\n    def test_businessInforReg():\n        def_name = sys._getframe().f_code.co_name\n        test_Assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(\"http://10.10.128.152:10053/user/login\")\n    \n        # 登陆页面\n        login(driver)\n        waitUntilDisplay(driver, test_businessInfoReg.txt_aut_css.value)\n        txt_auTitle = driver.find_element_by_css_selector(test_businessInfoReg.txt_aut_css.value).text\n        test_Assert.assert_text_ui(txt_auTitle, '企业基本资料')\n        logger.info(\"企业基本资料画面正常显示\")\n    \n        driver.find_element_by_css_selector(test_businessInfoReg.input_companyName_css.value).send_keys(\"诚泰科技-test\")\n        driver.find_element_by_css_selector(test_businessInfoReg.input_companyCode_css.value).send_keys(\"92520628MA6FK07055\")\n        driver.find_element_by_css_selector(test_businessInfoReg.input_legalPersonName_css.value).send_keys(\"黄小明\")\n        driver.find_element_by_css_selector(test_businessInfoReg.input_legalPersonCardNo_css.value).send_keys(\"110101199003077096\")\n        driver.find_element_by_css_selector(test_businessInfoReg.input_legalPersonAddress_css.value).send_keys(\"上海市浦东新区陆家嘴金砖大厦\")\n        driver.find_element_by_css_selector(test_businessInfoReg.input_legalPersonPostCode_css.value).send_keys(\"200120\")\n        driver.find_element_by_css_selector(test_businessInfoReg.input_legalPersonIndustry_css.value).send_keys(\"金融\")\n    \n        picture_dir = os.getcwd() + '\\\\test_data\\\\picture\\\\id_3.jpg'\n        driver.find_element_by_css_selector(test_businessInfoReg.upload_legalPersonCertificate_css.value).send_keys(picture_dir)\n    \n        driver.find_element_by_css_selector(test_businessInfoReg.upload_legalPersonBankNo_css.value).send_keys(\"6217996620000156427\")\n    \n        el = driver.find_element_by_xpath(test_businessInfoReg.Sel_bankName.value)\n>       Select(el).select_by_index(1)\n\ntest_flow\\test_Authentication\\test_businessInfoReg.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.select.Select object at 0x000001DE47E60520>\nwebelement = <selenium.webdriver.remote.webelement.WebElement (session=\"2b2674bea297e54efb5fdbb72e59bbad\", element=\"0.4801305156525595-15\")>\n\n    def __init__(self, webelement):\n        \"\"\"\n        Constructor. A check is made that the given element is, indeed, a SELECT tag. If it is not,\n        then an UnexpectedTagNameException is thrown.\n    \n        :Args:\n         - webelement - element SELECT element to wrap\n    \n        Example:\n            from selenium.webdriver.support.ui import Select \\n\n            Select(driver.find_element_by_tag_name(\"select\")).select_by_index(2)\n        \"\"\"\n        if webelement.tag_name.lower() != \"select\":\n>           raise UnexpectedTagNameException(\n                \"Select only works on <select> elements, not on <%s>\" %\n                webelement.tag_name)\nE           selenium.common.exceptions.UnexpectedTagNameException: Message: Select only works on <select> elements, not on <span>\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\select.py:37: UnexpectedTagNameException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "测试 http://10.10.128.152:10053/personal/baseinfo 企业认证",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.UnexpectedTagNameException: Message: Select only works on <select> elements, not on <span>",
    "statusTrace" : "@pytest.mark.run(order=1)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 http://10.10.128.152:10053/personal/baseinfo 企业认证\")\n    @allure.testcase(\"http://10.10.128.152:10053/personal/baseinfo\", \"企业认证 \uD83D\uDC47\")\n    def test_businessInforReg():\n        def_name = sys._getframe().f_code.co_name\n        test_Assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s:\\n\", def_name)\n    \n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(\"http://10.10.128.152:10053/user/login\")\n    \n        # 登陆页面\n        login(driver)\n        waitUntilDisplay(driver, test_businessInfoReg.txt_aut_css.value)\n        txt_auTitle = driver.find_element_by_css_selector(test_businessInfoReg.txt_aut_css.value).text\n        test_Assert.assert_text_ui(txt_auTitle, '企业基本资料')\n        logger.info(\"企业基本资料画面正常显示\")\n    \n        driver.find_element_by_css_selector(test_businessInfoReg.input_companyName_css.value).send_keys(\"诚泰科技-test\")\n        driver.find_element_by_css_selector(test_businessInfoReg.input_companyCode_css.value).send_keys(\"92520628MA6FK07055\")\n        driver.find_element_by_css_selector(test_businessInfoReg.input_legalPersonName_css.value).send_keys(\"黄小明\")\n        driver.find_element_by_css_selector(test_businessInfoReg.input_legalPersonCardNo_css.value).send_keys(\"110101199003077096\")\n        driver.find_element_by_css_selector(test_businessInfoReg.input_legalPersonAddress_css.value).send_keys(\"上海市浦东新区陆家嘴金砖大厦\")\n        driver.find_element_by_css_selector(test_businessInfoReg.input_legalPersonPostCode_css.value).send_keys(\"200120\")\n        driver.find_element_by_css_selector(test_businessInfoReg.input_legalPersonIndustry_css.value).send_keys(\"金融\")\n    \n        picture_dir = os.getcwd() + '\\\\test_data\\\\picture\\\\id_3.jpg'\n        driver.find_element_by_css_selector(test_businessInfoReg.upload_legalPersonCertificate_css.value).send_keys(picture_dir)\n    \n        driver.find_element_by_css_selector(test_businessInfoReg.upload_legalPersonBankNo_css.value).send_keys(\"6217996620000156427\")\n    \n        el = driver.find_element_by_xpath(test_businessInfoReg.Sel_bankName.value)\n>       Select(el).select_by_index(1)\n\ntest_flow\\test_Authentication\\test_businessInfoReg.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.select.Select object at 0x000001DE47E60520>\nwebelement = <selenium.webdriver.remote.webelement.WebElement (session=\"2b2674bea297e54efb5fdbb72e59bbad\", element=\"0.4801305156525595-15\")>\n\n    def __init__(self, webelement):\n        \"\"\"\n        Constructor. A check is made that the given element is, indeed, a SELECT tag. If it is not,\n        then an UnexpectedTagNameException is thrown.\n    \n        :Args:\n         - webelement - element SELECT element to wrap\n    \n        Example:\n            from selenium.webdriver.support.ui import Select \\n\n            Select(driver.find_element_by_tag_name(\"select\")).select_by_index(2)\n        \"\"\"\n        if webelement.tag_name.lower() != \"select\":\n>           raise UnexpectedTagNameException(\n                \"Select only works on <select> elements, not on <%s>\" %\n                webelement.tag_name)\nE           selenium.common.exceptions.UnexpectedTagNameException: Message: Select only works on <select> elements, not on <span>\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\select.py:37: UnexpectedTagNameException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "924699ef19ae3278",
      "name" : "log",
      "source" : "924699ef19ae3278.txt",
      "type" : "text/plain",
      "size" : 333
    }, {
      "uid" : "edd69bb3a30d46d8",
      "name" : "stderr",
      "source" : "edd69bb3a30d46d8.txt",
      "type" : "text/plain",
      "size" : 469
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "tag",
    "value" : "run(order=1)"
  }, {
    "name" : "parentSuite",
    "value" : "test_flow.test_Authentication"
  }, {
    "name" : "suite",
    "value" : "test_businessInfoReg"
  }, {
    "name" : "host",
    "value" : "A02-03-00033"
  }, {
    "name" : "thread",
    "value" : "3676-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_flow.test_Authentication.test_businessInfoReg"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "企业认证 \uD83D\uDC47",
    "url" : "http://10.10.128.152:10053/personal/baseinfo",
    "type" : "test_case"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=1)" ]
  },
  "source" : "7875a1c4b382ab24.json",
  "parameterValues" : [ ]
}