{
  "uid" : "299198e0ae0b1734",
  "name" : "test_Android",
  "fullName" : "test_flow.test_Authentication.test_jenkinsDebug#test_Android",
  "historyId" : "037f6ac01dca35d949e1d56271286eaa",
  "time" : {
    "start" : 1637545895192,
    "stop" : 1637545901471,
    "duration" : 6279
  },
  "description" : "测试 小程序自动化疏通测试-Android",
  "descriptionHtml" : "<p>测试 小程序自动化疏通测试-Android</p>\n",
  "status" : "broken",
  "statusMessage" : "TypeError: touch() missing 1 required positional argument: 'v'",
  "statusTrace" : "@pytest.mark.run(order=1)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 小程序自动化疏通测试-Android\")\n    def test_Android():\n        startApp()\n>       touch(name = 'com.future.shopping:id/action_bar_root')\n\ntest_flow\\test_Authentication\\test_jenkinsDebug.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\python\\lib\\site-packages\\airtest\\utils\\logwraper.py:67: in wrapper\n    m = inspect.getcallargs(f, *args, **kwargs)\nD:\\python\\lib\\inspect.py:1370: in getcallargs\n    _missing_arguments(f_name, req, True, arg2value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nf_name = 'touch', argnames = ['v'], pos = True\nvalues = {'kwargs': {'name': 'com.future.shopping:id/action_bar_root'}}\n\n    def _missing_arguments(f_name, argnames, pos, values):\n        names = [repr(name) for name in argnames if name not in values]\n        missing = len(names)\n        if missing == 1:\n            s = names[0]\n        elif missing == 2:\n            s = \"{} and {}\".format(*names)\n        else:\n            tail = \", {} and {}\".format(*names[-2:])\n            del names[-2:]\n            s = \", \".join(names) + tail\n        raise TypeError(\"%s() missing %i required %s argument%s: %s\" %\n                        (f_name, missing,\n                          \"positional\" if pos else \"keyword-only\",\n>                         \"\" if missing == 1 else \"s\", s))\nE       TypeError: touch() missing 1 required positional argument: 'v'\n\nD:\\python\\lib\\inspect.py:1300: TypeError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1637545895096,
      "stop" : 1637545895190,
      "duration" : 94
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "测试 小程序自动化疏通测试-Android",
    "status" : "broken",
    "statusMessage" : "TypeError: touch() missing 1 required positional argument: 'v'",
    "statusTrace" : "@pytest.mark.run(order=1)\n    @allure.severity(\"blocker\")\n    @allure.description(\"测试 小程序自动化疏通测试-Android\")\n    def test_Android():\n        startApp()\n>       touch(name = 'com.future.shopping:id/action_bar_root')\n\ntest_flow\\test_Authentication\\test_jenkinsDebug.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\python\\lib\\site-packages\\airtest\\utils\\logwraper.py:67: in wrapper\n    m = inspect.getcallargs(f, *args, **kwargs)\nD:\\python\\lib\\inspect.py:1370: in getcallargs\n    _missing_arguments(f_name, req, True, arg2value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nf_name = 'touch', argnames = ['v'], pos = True\nvalues = {'kwargs': {'name': 'com.future.shopping:id/action_bar_root'}}\n\n    def _missing_arguments(f_name, argnames, pos, values):\n        names = [repr(name) for name in argnames if name not in values]\n        missing = len(names)\n        if missing == 1:\n            s = names[0]\n        elif missing == 2:\n            s = \"{} and {}\".format(*names)\n        else:\n            tail = \", {} and {}\".format(*names[-2:])\n            del names[-2:]\n            s = \", \".join(names) + tail\n        raise TypeError(\"%s() missing %i required %s argument%s: %s\" %\n                        (f_name, missing,\n                          \"positional\" if pos else \"keyword-only\",\n>                         \"\" if missing == 1 else \"s\", s))\nE       TypeError: touch() missing 1 required positional argument: 'v'\n\nD:\\python\\lib\\inspect.py:1300: TypeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "65f749e5e5b48d12",
      "name" : "log",
      "source" : "65f749e5e5b48d12.txt",
      "type" : "text/plain",
      "size" : 206
    }, {
      "uid" : "c510276ceee47566",
      "name" : "stderr",
      "source" : "c510276ceee47566.txt",
      "type" : "text/plain",
      "size" : 206
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 2
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "tag",
    "value" : "run(order=1)"
  }, {
    "name" : "parentSuite",
    "value" : "test_flow.test_Authentication"
  }, {
    "name" : "suite",
    "value" : "test_jenkinsDebug"
  }, {
    "name" : "host",
    "value" : "BF-202011271053"
  }, {
    "name" : "thread",
    "value" : "12468-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_flow.test_Authentication.test_jenkinsDebug"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=1)" ]
  },
  "source" : "299198e0ae0b1734.json",
  "parameterValues" : [ ]
}